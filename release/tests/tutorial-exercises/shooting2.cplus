:- macros
 capacity -> 6;
 loaded -> (numberOfBullets>0).

:- constants
 alive :: inertialFluent;
 numberOfBullets :: inertialFluent(0..capacity);
 load, shoot :: exogenousAction.

:- variables
 I :: 0..capacity.

load causes numberOfBullets=I+1 if numberOfBullets=I
    where I<capacity.
nonexecutable load if numberOfBullets=capacity.

shoot causes -alive.
shoot causes numberOfBullets=I-1 if numberOfBullets=I
    where I>0.
nonexecutable shoot if -loaded.

nonexecutable load & shoot.
