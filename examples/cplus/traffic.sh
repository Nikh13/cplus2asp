# cplus2asp test script file.

######################################################################################################################
# Traffic World Tests
# --------------------------------------------------------------------------------------------------------------------

# ---------------------------------------------------- Traffic World --------------------------------------------------
echo "% ---------------------------------------------------- Traffic World --------------------------------------------------" 

# --------------------------- Scenario 1 (Query 1)---------------------------
echo "% --------------------------- Scenario 1 (Query 1)---------------------------" 
echo "$ cplus2asp traffic/scenario1.cp query=1 0" 
cplus2asp traffic/scenario1.cp query=1 0


# % Pragma: Running Query 'Query 1'.
# % Pragma: Minimum Step = '3', Maximum Step = '4'.
# % Pragma: Searching for all solutions.
# Solution 1:
# 
# 	RIGID CONSTANTS:  endNode(seg_ab)=b endNode(seg_bc1)=c endNode(seg_bc2)=c length(seg_ab)=4 length(seg_bc1)=4 length(seg_bc2)=3 speedLimit(seg_ab)=2 speedLimit(seg_bc1)=2 speedLimit(seg_bc2)=1 startNode(seg_ab)=a startNode(seg_bc1)=b startNode(seg_bc2)=b topSpeed(car1)=2
# 
# 	0:  distance(car1)=0 maxDistance(car1)=2 maxSpeed(car1)=2 modifiedDistance(car1)=0 modifiedOrientation(car1) modifiedSegment(car1)=seg_ab node(car1)=a positiveOrientation(car1) segment(car1)=seg_ab speed(car1)=2
# 
# 	1:  distance(car1)=2 maxDistance(car1)=4 maxSpeed(car1)=2 modifiedDistance(car1)=2 modifiedOrientation(car1) modifiedSegment(car1)=seg_ab positiveOrientation(car1) segment(car1)=seg_ab speed(car1)=2
# 
# 	ACTIONS:  chooseSegment(car1,seg_bc1)
# 
# 	2:  distance(car1)=4 maxDistance(car1)=2 maxSpeed(car1)=2 modifiedDistance(car1)=0 modifiedOrientation(car1) modifiedSegment(car1)=seg_bc1 nextSegment(car1)=seg_bc1 node(car1)=b positiveOrientation(car1) segment(car1)=seg_ab speed(car1)=2 willLeave(car1)
# 
# 	3:  distance(car1)=2 maxDistance(car1)=4 maxSpeed(car1)=2 modifiedDistance(car1)=2 modifiedOrientation(car1) modifiedSegment(car1)=seg_bc1 positiveOrientation(car1) segment(car1)=seg_bc1 speed(car1)=2
# 
# 	ACTIONS:  chooseSegment(car1,seg_bc2)
# 
# 	4:  distance(car1)=4 maxDistance(car1)=1 maxSpeed(car1)=1 modifiedDistance(car1)=0 modifiedSegment(car1)=seg_bc2 nextSegment(car1)=seg_bc2 node(car1)=c positiveOrientation(car1) segment(car1)=seg_bc1 speed(car1)=1 willLeave(car1)
# 
# 
# SATISFIABLE
# Models      : 1
# Total Steps : 4
# Time        : 0.030
# Prepare   : 0.030
# Prepro.   : 0.000
# Solving   : 0.000


# --------------------------- Scenario 1 (Query 2)---------------------------
echo "% --------------------------- Scenario 1 (Query 2)---------------------------" 
echo "$ cplus2asp traffic/scenario1.cp query=2 0" 
cplus2asp traffic/scenario1.cp query=2 0

# % Pragma: Running Query 'Query 2'.
# % Pragma: Minimum Step = '5', Maximum Step = '5'.
# % Pragma: Searching for all solutions.
# Solution 1:
# 
# 	RIGID CONSTANTS:  endNode(seg_ab)=b endNode(seg_bc1)=c endNode(seg_bc2)=c length(seg_ab)=4 length(seg_bc1)=4 length(seg_bc2)=3 speedLimit(seg_ab)=2 speedLimit(seg_bc1)=2 speedLimit(seg_bc2)=1 startNode(seg_ab)=a startNode(seg_bc1)=b startNode(seg_bc2)=b topSpeed(car1)=2
# 
# 	0:  distance(car1)=0 maxDistance(car1)=2 maxSpeed(car1)=2 modifiedDistance(car1)=0 modifiedOrientation(car1) modifiedSegment(car1)=seg_ab node(car1)=a positiveOrientation(car1) segment(car1)=seg_ab speed(car1)=2
# 
# 	1:  distance(car1)=2 maxDistance(car1)=4 maxSpeed(car1)=2 modifiedDistance(car1)=2 modifiedOrientation(car1) modifiedSegment(car1)=seg_ab positiveOrientation(car1) segment(car1)=seg_ab speed(car1)=2
# 
# 	ACTIONS:  chooseSegment(car1,seg_bc2)
# 
# 	2:  distance(car1)=4 maxDistance(car1)=1 maxSpeed(car1)=1 modifiedDistance(car1)=0 modifiedOrientation(car1) modifiedSegment(car1)=seg_bc2 nextSegment(car1)=seg_bc2 node(car1)=b positiveOrientation(car1) segment(car1)=seg_ab speed(car1)=1 willLeave(car1)
# 
# 	3:  distance(car1)=1 maxDistance(car1)=2 maxSpeed(car1)=1 modifiedDistance(car1)=1 modifiedOrientation(car1) modifiedSegment(car1)=seg_bc2 positiveOrientation(car1) segment(car1)=seg_bc2 speed(car1)=1
# 
# 	4:  distance(car1)=2 maxDistance(car1)=3 maxSpeed(car1)=1 modifiedDistance(car1)=2 modifiedOrientation(car1) modifiedSegment(car1)=seg_bc2 positiveOrientation(car1) segment(car1)=seg_bc2 speed(car1)=1
# 
# 	ACTIONS:  chooseSegment(car1,seg_bc1)
# 
# 	5:  distance(car1)=3 maxDistance(car1)=2 maxSpeed(car1)=2 modifiedDistance(car1)=0 modifiedSegment(car1)=seg_bc1 nextSegment(car1)=seg_bc1 node(car1)=c positiveOrientation(car1) segment(car1)=seg_bc2 speed(car1)=2 willLeave(car1)
# 
# 
# SATISFIABLE
# Models      : 1
# Total Steps : 5
# Time        : 0.030
# Prepare   : 0.030
# Prepro.   : 0.000
# Solving   : 0.000


# --------------------------- Scenario 2 ---------------------------
echo "% --------------------------- Scenario 2 ---------------------------" 
echo "$ cplus2asp traffic/scenario2.cp query=0 0" 
cplus2asp traffic/scenario2.cp query=0 0

# % Pragma: Running Query 'Query 0'.
# % Pragma: Minimum Step = '3', Maximum Step = '3'.
# % Pragma: Searching for 1 solutions.
# Solution 1:
# 
# 	RIGID CONSTANTS:  endNode(seg_ab)=b length(seg_ab)=9 speedLimit(seg_ab)=3 startNode(seg_ab)=a topSpeed(car1)=3 topSpeed(car2)=2 topSpeed(car3)=1
# 
# 	0:  ahead(car2,car1) ahead(car3,car1) ahead(car3,car2) distance(car1)=0 distance(car2)=2 distance(car3)=5 maxDistance(car1)=3 maxDistance(car2)=4 maxDistance(car3)=6 maxSpeed(car1)=3 maxSpeed(car2)=2 maxSpeed(car3)=1 modifiedDistance(car1)=0 modifiedDistance(car2)=2 modifiedDistance(car3)=5 modifiedOrientation(car1) modifiedOrientation(car2) modifiedOrientation(car3) modifiedSegment(car1)=seg_ab modifiedSegment(car2)=seg_ab modifiedSegment(car3)=seg_ab node(car1)=a positiveOrientation(car1) positiveOrientation(car2) positiveOrientation(car3) segment(car1)=seg_ab segment(car2)=seg_ab segment(car3)=seg_ab speed(car1)=3 speed(car2)=2 speed(car3)=1
# 
# 	1:  ahead(car2,car1) ahead(car3,car1) ahead(car3,car2) distance(car1)=3 distance(car2)=4 distance(car3)=6 maxDistance(car1)=6 maxDistance(car2)=6 maxDistance(car3)=7 maxSpeed(car1)=3 maxSpeed(car2)=2 maxSpeed(car3)=1 modifiedDistance(car1)=3 modifiedDistance(car2)=4 modifiedDistance(car3)=6 modifiedOrientation(car1) modifiedOrientation(car2) modifiedOrientation(car3) modifiedSegment(car1)=seg_ab modifiedSegment(car2)=seg_ab modifiedSegment(car3)=seg_ab positiveOrientation(car1) positiveOrientation(car2) positiveOrientation(car3) segment(car1)=seg_ab segment(car2)=seg_ab segment(car3)=seg_ab speed(car1)=2 speed(car2)=2 speed(car3)=1 varsigmaAhead(car2,car1)
# 
# 	2:  ahead(car2,car1) ahead(car3,car1) ahead(car3,car2) distance(car1)=5 distance(car2)=6 distance(car3)=7 maxDistance(car1)=8 maxDistance(car2)=8 maxDistance(car3)=8 maxSpeed(car1)=3 maxSpeed(car2)=2 maxSpeed(car3)=1 modifiedDistance(car1)=5 modifiedDistance(car2)=6 modifiedDistance(car3)=7 modifiedOrientation(car1) modifiedOrientation(car2) modifiedOrientation(car3) modifiedSegment(car1)=seg_ab modifiedSegment(car2)=seg_ab modifiedSegment(car3)=seg_ab positiveOrientation(car1) positiveOrientation(car2) positiveOrientation(car3) segment(car1)=seg_ab segment(car2)=seg_ab segment(car3)=seg_ab speed(car1)=1 speed(car2)=1 speed(car3)=1 varsigmaAhead(car2,car1) varsigmaAhead(car3,car2)
# 
# 	3:  ahead(car2,car1) ahead(car3,car1) ahead(car3,car2) distance(car1)=6 distance(car2)=7 distance(car3)=8 maxDistance(car1)=9 maxDistance(car2)=9 maxDistance(car3)=9 maxSpeed(car1)=3 maxSpeed(car2)=2 maxSpeed(car3)=1 modifiedDistance(car1)=6 modifiedDistance(car2)=7 modifiedDistance(car3)=8 modifiedOrientation(car1) modifiedOrientation(car2) modifiedOrientation(car3) modifiedSegment(car1)=seg_ab modifiedSegment(car2)=seg_ab modifiedSegment(car3)=seg_ab positiveOrientation(car1) positiveOrientation(car2) positiveOrientation(car3) segment(car1)=seg_ab segment(car2)=seg_ab segment(car3)=seg_ab speed(car1)=1 speed(car2)=1 speed(car3)=1 varsigmaAhead(car2,car1) varsigmaAhead(car3,car2)
# 
# 
# SATISFIABLE
# Models      : 1
# Total Steps : 3
# Time        : 0.200
# Prepare   : 0.160
# Prepro.   : 0.040
# Solving   : 0.000


# --------------------------- Scenario 3 ---------------------------
echo "% --------------------------- Scenario 3 ---------------------------" 
echo "$ cplus2asp traffic/scenario3.cp query=0 0" 
cplus2asp traffic/scenario3.cp query=0 0

# % Pragma: Running Query 'Query 0'.
# % Pragma: Minimum Step = '5', Maximum Step = '5'.
# % Pragma: Searching for all solutions.
# Solution 1:
# 
# 	RIGID CONSTANTS:  endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d length(seg_ac)=3 length(seg_bc)=3 length(seg_cd)=4 speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(car1)=1 topSpeed(car2)=1
# 
# 	0:  distance(car1)=1 distance(car2)=1 maxDistance(car1)=2 maxDistance(car2)=2 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=1 modifiedDistance(car2)=1 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_ac modifiedSegment(car2)=seg_bc positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_bc speed(car1)=1 speed(car2)=1
# 
# 	1:  distance(car1)=2 distance(car2)=2 maxDistance(car1)=3 maxDistance(car2)=3 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=2 modifiedDistance(car2)=2 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_ac modifiedSegment(car2)=seg_bc positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_bc speed(car1)=1 speed(car2)=1
# 
# 	ACTIONS:  chooseSegment(car1,seg_cd) chooseSegment(car2,seg_cd)
# 
# 	2:  distance(car1)=3 distance(car2)=3 maxDistance(car1)=1 maxDistance(car2)=1 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=0 modifiedDistance(car2)=0 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd nextSegment(car1)=seg_cd nextSegment(car2)=seg_cd node(car1)=c node(car2)=c positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_bc speed(car1)=0 speed(car2)=1 willLeave(car2)
# 
# 	3:  ahead(car2,car1) distance(car1)=3 distance(car2)=1 maxDistance(car1)=1 maxDistance(car2)=2 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=0 modifiedDistance(car2)=1 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd nextSegment(car1)=seg_cd node(car1)=c positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_cd speed(car1)=0 speed(car2)=1 varsigmaAhead(car2,car1)
# 
# 	4:  ahead(car2,car1) distance(car1)=3 distance(car2)=2 maxDistance(car1)=1 maxDistance(car2)=3 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=0 modifiedDistance(car2)=2 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd nextSegment(car1)=seg_cd node(car1)=c positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_cd speed(car1)=1 speed(car2)=1 varsigmaAhead(car2,car1) willLeave(car1)
# 
# 	5:  ahead(car2,car1) distance(car1)=1 distance(car2)=3 maxDistance(car1)=2 maxDistance(car2)=4 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=1 modifiedDistance(car2)=3 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_cd segment(car2)=seg_cd speed(car1)=1 speed(car2)=1 varsigmaAhead(car2,car1)
# 
# 
# Solution 2:
# 
# 	RIGID CONSTANTS:  endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d length(seg_ac)=3 length(seg_bc)=3 length(seg_cd)=4 speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(car1)=1 topSpeed(car2)=1
# 
# 	0:  distance(car1)=1 distance(car2)=1 maxDistance(car1)=2 maxDistance(car2)=2 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=1 modifiedDistance(car2)=1 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_ac modifiedSegment(car2)=seg_bc positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_bc speed(car1)=1 speed(car2)=1
# 
# 	1:  distance(car1)=2 distance(car2)=2 maxDistance(car1)=3 maxDistance(car2)=3 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=2 modifiedDistance(car2)=2 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_ac modifiedSegment(car2)=seg_bc positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_bc speed(car1)=1 speed(car2)=1
# 
# 	ACTIONS:  chooseSegment(car1,seg_cd) chooseSegment(car2,seg_cd)
# 
# 	2:  distance(car1)=3 distance(car2)=3 maxDistance(car1)=1 maxDistance(car2)=1 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=0 modifiedDistance(car2)=0 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd nextSegment(car1)=seg_cd nextSegment(car2)=seg_cd node(car1)=c node(car2)=c positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_ac segment(car2)=seg_bc speed(car1)=1 speed(car2)=0 willLeave(car1)
# 
# 	3:  ahead(car1,car2) distance(car1)=1 distance(car2)=3 maxDistance(car1)=2 maxDistance(car2)=1 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=1 modifiedDistance(car2)=0 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd nextSegment(car2)=seg_cd node(car2)=c positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_cd segment(car2)=seg_bc speed(car1)=1 speed(car2)=0 varsigmaAhead(car1,car2)
# 
# 	4:  ahead(car1,car2) distance(car1)=2 distance(car2)=3 maxDistance(car1)=3 maxDistance(car2)=1 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=2 modifiedDistance(car2)=0 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd nextSegment(car2)=seg_cd node(car2)=c positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_cd segment(car2)=seg_bc speed(car1)=1 speed(car2)=1 varsigmaAhead(car1,car2) willLeave(car2)
# 
# 	5:  ahead(car1,car2) distance(car1)=3 distance(car2)=1 maxDistance(car1)=4 maxDistance(car2)=2 maxSpeed(car1)=1 maxSpeed(car2)=1 modifiedDistance(car1)=3 modifiedDistance(car2)=1 modifiedOrientation(car1) modifiedOrientation(car2) modifiedSegment(car1)=seg_cd modifiedSegment(car2)=seg_cd positiveOrientation(car1) positiveOrientation(car2) segment(car1)=seg_cd segment(car2)=seg_cd speed(car1)=1 speed(car2)=1 varsigmaAhead(car1,car2)
# 
# 
# SATISFIABLE
# Models      : 2
# Total Steps : 5
# Time        : 0.090
# Prepare   : 0.070
# Prepro.   : 0.010
# Solving   : 0.010


# --------------------------- Alt Merge ---------------------------
echo "% --------------------------- Alt Merge ---------------------------" 
echo "$ cplus2asp traffic/scenario_altmerge.cp query=0 0" 
cplus2asp traffic/scenario_altmerge.cp query=0 0

# % Pragma: Running Query 'Query 0'.
# % Pragma: Minimum Step = '11', Maximum Step = '11'.
# % Pragma: Searching for all solutions.
# Solution 1:
# 
# 	RIGID CONSTANTS:  endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d length(seg_ac)=6 length(seg_bc)=6 length(seg_cd)=12 speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(blackcar(1))=1 topSpeed(blackcar(2))=1 topSpeed(blackcar(3))=1 topSpeed(redcar(1))=2 topSpeed(redcar(2))=2 topSpeed(redcar(3))=2
# 
# 	0:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(3))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=0 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(redcar(3))
# 
# 	1:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(3)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=3 distance(redcar(2))=5 distance(redcar(3))=1 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=4 maxDistance(redcar(2))=6 maxDistance(redcar(3))=2 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=1 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd node(blackcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=0 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3))
# 
# 	ACTIONS:  chooseSegment(redcar(2),seg_cd)
# 
# 	2:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=2 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=3 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=2 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(3))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(3))
# 
# 	3:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=5 distance(blackcar(3))=1 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=3 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=2 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=4 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=1 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=3 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3))
# 
# 	ACTIONS:  chooseSegment(blackcar(2),seg_cd)
# 
# 	4:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=2 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=4 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=3 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=5 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=2 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=4 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(2))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(redcar(2))
# 
# 	5:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(2)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=3 distance(redcar(1))=5 distance(redcar(2))=1 distance(redcar(3))=5 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=4 maxDistance(redcar(1))=6 maxDistance(redcar(2))=2 maxDistance(redcar(3))=6 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=3 modifiedDistance(redcar(1))=5 modifiedDistance(redcar(2))=1 modifiedDistance(redcar(3))=5 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd node(blackcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))
# 
# 	ACTIONS:  chooseSegment(redcar(1),seg_cd)
# 
# 	6:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=4 distance(redcar(1))=6 distance(redcar(2))=2 distance(redcar(3))=6 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=5 maxDistance(redcar(1))=1 maxDistance(redcar(2))=3 maxDistance(redcar(3))=7 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=4 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=2 modifiedDistance(redcar(3))=6 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(2))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(blackcar(2))
# 
# 	7:  ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=5 distance(blackcar(2))=1 distance(blackcar(3))=5 distance(redcar(1))=6 distance(redcar(2))=3 distance(redcar(3))=7 maxDistance(blackcar(1))=6 maxDistance(blackcar(2))=2 maxDistance(blackcar(3))=6 maxDistance(redcar(1))=1 maxDistance(redcar(2))=4 maxDistance(redcar(3))=8 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=5 modifiedDistance(blackcar(2))=1 modifiedDistance(blackcar(3))=5 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=3 modifiedDistance(redcar(3))=7 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))
# 
# 	ACTIONS:  chooseSegment(blackcar(1),seg_cd)
# 
# 	8:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=2 distance(blackcar(3))=6 distance(redcar(1))=6 distance(redcar(2))=4 distance(redcar(3))=8 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=3 maxDistance(blackcar(3))=7 maxDistance(redcar(1))=1 maxDistance(redcar(2))=5 maxDistance(redcar(3))=9 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=2 modifiedDistance(blackcar(3))=6 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=8 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(1))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(redcar(1))
# 
# 	9:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(1),blackcar(1)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=3 distance(blackcar(3))=7 distance(redcar(1))=1 distance(redcar(2))=5 distance(redcar(3))=9 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=4 maxDistance(blackcar(3))=8 maxDistance(redcar(1))=2 maxDistance(redcar(2))=6 maxDistance(redcar(3))=10 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=3 modifiedDistance(blackcar(3))=7 modifiedDistance(redcar(1))=1 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=9 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(1),blackcar(1)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))
# 
# 	10:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(1),blackcar(1)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=4 distance(blackcar(3))=8 distance(redcar(1))=2 distance(redcar(2))=6 distance(redcar(3))=10 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=9 maxDistance(redcar(1))=3 maxDistance(redcar(2))=7 maxDistance(redcar(3))=11 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=8 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=6 modifiedDistance(redcar(3))=10 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(1),blackcar(1)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(blackcar(1))
# 
# 	11:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(1),blackcar(1)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=1 distance(blackcar(2))=5 distance(blackcar(3))=9 distance(redcar(1))=3 distance(redcar(2))=7 distance(redcar(3))=11 maxDistance(blackcar(1))=2 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=10 maxDistance(redcar(1))=4 maxDistance(redcar(2))=8 maxDistance(redcar(3))=12 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=1 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=9 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=7 modifiedDistance(redcar(3))=11 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(1),blackcar(1)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))
# 
# 
# Solution 2:
# 
# 	RIGID CONSTANTS:  endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d length(seg_ac)=6 length(seg_bc)=6 length(seg_cd)=12 speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(blackcar(1))=1 topSpeed(blackcar(2))=1 topSpeed(blackcar(3))=1 topSpeed(redcar(1))=2 topSpeed(redcar(2))=2 topSpeed(redcar(3))=2
# 
# 	0:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(3))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=0 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(3))
# 
# 	1:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=5 distance(blackcar(3))=1 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=2 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=1 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=0 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2))
# 
# 	ACTIONS:  chooseSegment(blackcar(2),seg_cd)
# 
# 	2:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=2 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=3 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=2 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(2))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(redcar(3))
# 
# 	3:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=3 distance(redcar(1))=3 distance(redcar(2))=5 distance(redcar(3))=1 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=4 maxDistance(redcar(1))=4 maxDistance(redcar(2))=6 maxDistance(redcar(3))=2 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=3 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=1 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd node(blackcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2))
# 
# 	ACTIONS:  chooseSegment(redcar(2),seg_cd)
# 
# 	4:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=4 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=2 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=5 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=3 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=4 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=2 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(2))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(2))
# 
# 	5:  ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=5 distance(blackcar(2))=1 distance(blackcar(3))=5 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=3 maxDistance(blackcar(1))=6 maxDistance(blackcar(2))=2 maxDistance(blackcar(3))=6 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=4 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=5 modifiedDistance(blackcar(2))=1 modifiedDistance(blackcar(3))=5 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=3 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2))
# 
# 	ACTIONS:  chooseSegment(blackcar(1),seg_cd)
# 
# 	6:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=2 distance(blackcar(3))=6 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=4 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=3 maxDistance(blackcar(3))=7 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=5 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=2 modifiedDistance(blackcar(3))=6 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=4 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(1))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(redcar(2))
# 
# 	7:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=3 distance(blackcar(3))=7 distance(redcar(1))=5 distance(redcar(2))=1 distance(redcar(3))=5 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=4 maxDistance(blackcar(3))=8 maxDistance(redcar(1))=6 maxDistance(redcar(2))=2 maxDistance(redcar(3))=6 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=3 modifiedDistance(blackcar(3))=7 modifiedDistance(redcar(1))=5 modifiedDistance(redcar(2))=1 modifiedDistance(redcar(3))=5 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))
# 
# 	ACTIONS:  chooseSegment(redcar(1),seg_cd)
# 
# 	8:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=4 distance(blackcar(3))=8 distance(redcar(1))=6 distance(redcar(2))=2 distance(redcar(3))=6 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=9 maxDistance(redcar(1))=1 maxDistance(redcar(2))=3 maxDistance(redcar(3))=7 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=8 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=2 modifiedDistance(redcar(3))=6 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(1))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(blackcar(1))
# 
# 	9:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=1 distance(blackcar(2))=5 distance(blackcar(3))=9 distance(redcar(1))=6 distance(redcar(2))=3 distance(redcar(3))=7 maxDistance(blackcar(1))=2 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=10 maxDistance(redcar(1))=1 maxDistance(redcar(2))=4 maxDistance(redcar(3))=8 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=1 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=9 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=3 modifiedDistance(redcar(3))=7 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))
# 
# 	10:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=6 distance(blackcar(3))=10 distance(redcar(1))=6 distance(redcar(2))=4 distance(redcar(3))=8 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=7 maxDistance(blackcar(3))=11 maxDistance(redcar(1))=1 maxDistance(redcar(2))=5 maxDistance(redcar(3))=9 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=6 modifiedDistance(blackcar(3))=10 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=8 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(redcar(1))
# 
# 	11:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=7 distance(blackcar(3))=11 distance(redcar(1))=1 distance(redcar(2))=5 distance(redcar(3))=9 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=8 maxDistance(blackcar(3))=12 maxDistance(redcar(1))=2 maxDistance(redcar(2))=6 maxDistance(redcar(3))=10 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=7 modifiedDistance(blackcar(3))=11 modifiedDistance(redcar(1))=1 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=9 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))
# 
# 
# SATISFIABLE
# Models      : 2
# Total Steps : 11
# Time        : 12.600
# Prepare   : 5.770
# Prepro.   : 5.720
# Solving   : 1.050
