#!/bin/sh

# Traffic World Benchmarking Script


# ----------------------------------------------------------------------------------------------------------------------
# Cplus2ASP v2 (incremental)
# ----------------------------------------------------------------------------------------------------------------------

cplus2asp traffic-altmerge-benchmark.cp query=0 --mode=incremental

% Pragma: Running Query 'Query '0''.
% Pragma: Minimum Step = '0', Maximum Step = '100'.
% Pragma: Searching for 1 solutions.
=============== step 1 ===============
Models   : 0
Time     : 1.650 (g: 0.820, p: 0.830, s: 0.000)
Rules    : 452239
Choices  : 0
Conflicts: 0
=============== step 2 ===============
Models   : 0
Time     : 0.980 (g: 0.580, p: 0.400, s: 0.000)
Rules    : 231422
Choices  : 0
Conflicts: 0
=============== step 3 ===============
Models   : 0
Time     : 1.060 (g: 0.610, p: 0.450, s: 0.000)
Rules    : 231422
Choices  : 0
Conflicts: 0
=============== step 4 ===============
Models   : 0
Time     : 1.110 (g: 0.610, p: 0.500, s: 0.000)
Rules    : 231422
Choices  : 0
Conflicts: 0
=============== step 5 ===============
Models   : 0
Time     : 1.210 (g: 0.660, p: 0.550, s: 0.000)
Rules    : 231422
Choices  : 0
Conflicts: 0
=============== step 6 ===============
Models   : 0
Time     : 1.280 (g: 0.650, p: 0.610, s: 0.020)
Rules    : 231422
Choices  : 11
Conflicts: 11
=============== step 7 ===============
Models   : 0
Time     : 1.370 (g: 0.670, p: 0.600, s: 0.100)
Rules    : 231422
Choices  : 182
Conflicts: 90
=============== step 8 ===============
Models   : 0
Time     : 1.560 (g: 0.730, p: 0.640, s: 0.180)
Rules    : 231422
Choices  : 410
Conflicts: 267
=============== step 9 ===============
Models   : 0
Time     : 1.820 (g: 0.710, p: 0.660, s: 0.440)
Rules    : 231422
Choices  : 872
Conflicts: 586
=============== step 10 ===============
Models   : 0
Time     : 2.110 (g: 0.720, p: 0.700, s: 0.670)
Rules    : 231422
Choices  : 1411
Conflicts: 825
=============== step 11 ===============
Solution: 1
         endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d length(seg_ac)=6 length(seg_bc)=6 length(seg_cd)=12 speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(blackcar(1))=1 topSpeed(blackcar(2))=1 topSpeed(blackcar(3))=1 topSpeed(redcar(1))=2 topSpeed(redcar(2))=2 topSpeed(redcar(3))=2

        0:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(3))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=0 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(3))

        1:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=5 distance(blackcar(3))=1 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=2 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=1 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=0 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2))

        ACTIONS:  chooseSegment(blackcar(2),seg_cd)

        2:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=2 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=3 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=2 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(2))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(redcar(3))

        3:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=3 distance(redcar(1))=3 distance(redcar(2))=5 distance(redcar(3))=1 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=4 maxDistance(redcar(1))=4 maxDistance(redcar(2))=6 maxDistance(redcar(3))=2 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=3 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=1 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd node(blackcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        ACTIONS:  chooseSegment(redcar(2),seg_cd)

        4:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=4 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=2 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=5 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=3 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=4 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=2 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(2))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(2))

        5:  ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=5 distance(blackcar(2))=1 distance(blackcar(3))=5 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=3 maxDistance(blackcar(1))=6 maxDistance(blackcar(2))=2 maxDistance(blackcar(3))=6 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=4 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=5 modifiedDistance(blackcar(2))=1 modifiedDistance(blackcar(3))=5 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=3 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        ACTIONS:  chooseSegment(blackcar(1),seg_cd)

        6:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=2 distance(blackcar(3))=6 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=4 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=3 maxDistance(blackcar(3))=7 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=5 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=2 modifiedDistance(blackcar(3))=6 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=4 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(1))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(redcar(2))

        7:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=3 distance(blackcar(3))=7 distance(redcar(1))=5 distance(redcar(2))=1 distance(redcar(3))=5 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=4 maxDistance(blackcar(3))=8 maxDistance(redcar(1))=6 maxDistance(redcar(2))=2 maxDistance(redcar(3))=6 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=3 modifiedDistance(blackcar(3))=7 modifiedDistance(redcar(1))=5 modifiedDistance(redcar(2))=1 modifiedDistance(redcar(3))=5 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        ACTIONS:  chooseSegment(redcar(1),seg_cd)

        8:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=4 distance(blackcar(3))=8 distance(redcar(1))=6 distance(redcar(2))=2 distance(redcar(3))=6 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=9 maxDistance(redcar(1))=1 maxDistance(redcar(2))=3 maxDistance(redcar(3))=7 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=8 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=2 modifiedDistance(redcar(3))=6 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(1))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(blackcar(1))

        9:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=1 distance(blackcar(2))=5 distance(blackcar(3))=9 distance(redcar(1))=6 distance(redcar(2))=3 distance(redcar(3))=7 maxDistance(blackcar(1))=2 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=10 maxDistance(redcar(1))=1 maxDistance(redcar(2))=4 maxDistance(redcar(3))=8 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=1 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=9 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=3 modifiedDistance(redcar(3))=7 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        10:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=6 distance(blackcar(3))=10 distance(redcar(1))=6 distance(redcar(2))=4 distance(redcar(3))=8 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=7 maxDistance(blackcar(3))=11 maxDistance(redcar(1))=1 maxDistance(redcar(2))=5 maxDistance(redcar(3))=9 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=6 modifiedDistance(blackcar(3))=10 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=8 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(redcar(1))

        11:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=7 distance(blackcar(3))=11 distance(redcar(1))=1 distance(redcar(2))=5 distance(redcar(3))=9 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=8 maxDistance(blackcar(3))=12 maxDistance(redcar(1))=2 maxDistance(redcar(2))=6 maxDistance(redcar(3))=10 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=7 modifiedDistance(blackcar(3))=11 modifiedDistance(redcar(1))=1 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=9 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))

Models   : 1
Time     : 2.710 (g: 0.750, p: 0.750, s: 1.190)
Rules    : 231422
Choices  : 2560
Conflicts: 1695
=============== Summary ===============
SATISFIABLE
Models      : 1+
Total Steps : 11
Time        : 16.890
Prepare   : 7.510
Prepro.   : 6.690
Choices     : 5446
Conflicts   : 3474
Restarts    : 14
Atoms       : 2262231
Rules       : 2766459 (1: 2762823 2: 2358 3: 1278)
Bodies      : 521866
Equivalences: 4523955 (Atom=Atom: 2213531 Body=Body: 13499 Other: 2296925)
Tight       : Yes
Variables   : 276145 (Eliminated:    0)
Constraints : 469865 (Binary: 79.3% Ternary:  1.5% Other: 19.2%)
Lemmas      : 3469   (Binary:  3.1% Ternary:  3.5% Other: 93.4%)
Conflicts : 3469   (Average Length: 353.3)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0



# ----------------------------------------------------------------------------------------------------------------------
# Cplus2ASP v2 (static)
# ----------------------------------------------------------------------------------------------------------------------

cplus2asp traffic-altmerge-benchmark.cp query=0 --mode=static-auto

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '0'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 0.640
  Prepare   : 0.380
  Prepro.   : 0.260
  Solving   : 0.000
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '1'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 1.760
  Prepare   : 0.840
  Prepro.   : 0.920
  Solving   : 0.000
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '2'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 2.810
  Prepare   : 1.320
  Prepro.   : 1.490
  Solving   : 0.000
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '3'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 3.850
  Prepare   : 1.780
  Prepro.   : 2.070
  Solving   : 0.000
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '4'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 4.870
  Prepare   : 2.220
  Prepro.   : 2.650
  Solving   : 0.000
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '5'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 6.000
  Prepare   : 2.750
  Prepro.   : 3.250
  Solving   : 0.000
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '6'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 7.480
  Prepare   : 3.260
  Prepro.   : 4.150
  Solving   : 0.070
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '7'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 9.190
  Prepare   : 3.790
  Prepro.   : 4.790
  Solving   : 0.610
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '8'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 11.670
  Prepare   : 4.300
  Prepro.   : 5.340
  Solving   : 2.030
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '9'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 13.920
  Prepare   : 4.990
  Prepro.   : 6.130
  Solving   : 2.800
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '10'.
% Pragma: Searching for 1 solutions.
% Pragma: No solutions found.

Models      : 0
Time        : 19.150
  Prepare   : 5.270
  Prepro.   : 6.760
  Solving   : 7.120
No solution.

% Pragma: Running Query 'Query 0'.
% Pragma: Maximum Step = '11'.
% Pragma: Searching for 1 solutions.
Solution: 1
         endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d length(seg_ac)=6 length(seg_bc)=6 length(seg_cd)=12 speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(blackcar(1))=1 topSpeed(blackcar(2))=1 topSpeed(blackcar(3))=1 topSpeed(redcar(1))=2 topSpeed(redcar(2))=2 topSpeed(redcar(3))=2

        0:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(3))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=0 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(3))

        1:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=5 distance(blackcar(3))=1 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=2 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=1 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=0 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2))

        ACTIONS:  chooseSegment(blackcar(2),seg_cd)

        2:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=2 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=3 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=2 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(2))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(redcar(3))

        3:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=3 distance(redcar(1))=3 distance(redcar(2))=5 distance(redcar(3))=1 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=4 maxDistance(redcar(1))=4 maxDistance(redcar(2))=6 maxDistance(redcar(3))=2 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=3 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=1 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd node(blackcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        ACTIONS:  chooseSegment(redcar(2),seg_cd)

        4:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=4 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=2 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=5 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=3 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=4 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=2 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(2))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(2))

        5:  ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=5 distance(blackcar(2))=1 distance(blackcar(3))=5 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=3 maxDistance(blackcar(1))=6 maxDistance(blackcar(2))=2 maxDistance(blackcar(3))=6 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=4 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=5 modifiedDistance(blackcar(2))=1 modifiedDistance(blackcar(3))=5 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=3 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        ACTIONS:  chooseSegment(blackcar(1),seg_cd)

        6:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=2 distance(blackcar(3))=6 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=4 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=3 maxDistance(blackcar(3))=7 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=5 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=2 modifiedDistance(blackcar(3))=6 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=4 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(1))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(redcar(2))

        7:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=3 distance(blackcar(3))=7 distance(redcar(1))=5 distance(redcar(2))=1 distance(redcar(3))=5 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=4 maxDistance(blackcar(3))=8 maxDistance(redcar(1))=6 maxDistance(redcar(2))=2 maxDistance(redcar(3))=6 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=3 modifiedDistance(blackcar(3))=7 modifiedDistance(redcar(1))=5 modifiedDistance(redcar(2))=1 modifiedDistance(redcar(3))=5 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        ACTIONS:  chooseSegment(redcar(1),seg_cd)

        8:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=4 distance(blackcar(3))=8 distance(redcar(1))=6 distance(redcar(2))=2 distance(redcar(3))=6 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=9 maxDistance(redcar(1))=1 maxDistance(redcar(2))=3 maxDistance(redcar(3))=7 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=8 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=2 modifiedDistance(redcar(3))=6 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(1))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(blackcar(1))

        9:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=1 distance(blackcar(2))=5 distance(blackcar(3))=9 distance(redcar(1))=6 distance(redcar(2))=3 distance(redcar(3))=7 maxDistance(blackcar(1))=2 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=10 maxDistance(redcar(1))=1 maxDistance(redcar(2))=4 maxDistance(redcar(3))=8 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=1 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=9 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=3 modifiedDistance(redcar(3))=7 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))

        10:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=6 distance(blackcar(3))=10 distance(redcar(1))=6 distance(redcar(2))=4 distance(redcar(3))=8 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=7 maxDistance(blackcar(3))=11 maxDistance(redcar(1))=1 maxDistance(redcar(2))=5 maxDistance(redcar(3))=9 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=6 modifiedDistance(blackcar(3))=10 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=8 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2)) willLeave(redcar(1))

        11:  ahead(blackcar(1),redcar(1)) ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(2),redcar(2)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(blackcar(3),redcar(3)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=3 distance(blackcar(2))=7 distance(blackcar(3))=11 distance(redcar(1))=1 distance(redcar(2))=5 distance(redcar(3))=9 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=8 maxDistance(blackcar(3))=12 maxDistance(redcar(1))=2 maxDistance(redcar(2))=6 maxDistance(redcar(3))=10 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=7 modifiedDistance(blackcar(3))=11 modifiedDistance(redcar(1))=1 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=9 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(1),redcar(1)) varsigmaAhead(blackcar(2),redcar(2)) varsigmaAhead(blackcar(3),redcar(3)) varsigmaAhead(redcar(2),blackcar(1)) varsigmaAhead(redcar(3),blackcar(2))


Models      : 1+
Time        : 27.390
  Prepare   : 6.010
  Prepro.   : 7.440
  Solving   : 13.940

# ----------------------------------------------------------------------------------------------------------------------
# Cplus2ASP v1 
# ----------------------------------------------------------------------------------------------------------------------

$ cplus2asp.old --translator "cplus2asp.bin.old" traffic-altmerge-benchmark.cp --grounder-solver "clingo" -grsoopt "--stats" query=0

% Running Query 0 with maxstep=0.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 0.950
Prepare   : 0.490
Prepro.   : 0.460
Choices     : 0
Conflicts   : 0
Restarts    : 0
Atoms       : 223872
Rules       : 270803 (1: 270161 2: 486 3: 156)
Bodies      : 45279
Equivalences: 455826 (Atom=Atom: 221907 Body=Body: 4866 Other: 229053)
Tight       : Yes
Variables   : 26269  (Eliminated:    0)
Constraints : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Lemmas      : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Conflicts : 0      (Average Length: 0.0)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=1.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 2.070
Prepare   : 1.020
Prepro.   : 1.050
Choices     : 0
Conflicts   : 0
Restarts    : 0
Atoms       : 450997
Rules       : 549918 (1: 548670 2: 990 3: 258)
Bodies      : 95769
Equivalences: 918416 (Atom=Atom: 447010 Body=Body: 9732 Other: 461674)
Tight       : Yes
Variables   : 57223  (Eliminated:    0)
Constraints : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Lemmas      : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Conflicts : 0      (Average Length: 0.0)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=2.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 3.240
Prepare   : 1.580
Prepro.   : 1.660
Choices     : 0
Conflicts   : 0
Restarts    : 0
Atoms       : 678122
Rules       : 829033 (1: 827179 2: 1494 3: 360)
Bodies      : 146259
Equivalences: 1381006 (Atom=Atom: 672113 Body=Body: 14598 Other: 694295)
Tight       : Yes
Variables   : 88177  (Eliminated:    0)
Constraints : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Lemmas      : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Conflicts : 0      (Average Length: 0.0)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=3.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 4.430
Prepare   : 2.130
Prepro.   : 2.300
Choices     : 0
Conflicts   : 0
Restarts    : 0
Atoms       : 905247
Rules       : 1108148 (1: 1105688 2: 1998 3: 462)
Bodies      : 196749
Equivalences: 1843596 (Atom=Atom: 897216 Body=Body: 19464 Other: 926916)
Tight       : Yes
Variables   : 119131 (Eliminated:    0)
Constraints : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Lemmas      : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Conflicts : 0      (Average Length: 0.0)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=4.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 5.670
Prepare   : 2.730
Prepro.   : 2.940
Choices     : 0
Conflicts   : 0
Restarts    : 0
Atoms       : 1132372
Rules       : 1387263 (1: 1384197 2: 2502 3: 564)
Bodies      : 247239
Equivalences: 2306186 (Atom=Atom: 1122319 Body=Body: 24330 Other: 1159537)
Tight       : Yes
Variables   : 150085 (Eliminated:    0)
Constraints : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Lemmas      : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Conflicts : 0      (Average Length: 0.0)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=5.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 6.980
Prepare   : 3.370
Prepro.   : 3.610
Choices     : 0
Conflicts   : 0
Restarts    : 0
Atoms       : 1359497
Rules       : 1666378 (1: 1662706 2: 3006 3: 666)
Bodies      : 297729
Equivalences: 2768776 (Atom=Atom: 1347422 Body=Body: 29196 Other: 1392158)
Tight       : Yes
Variables   : 181039 (Eliminated:    0)
Constraints : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Lemmas      : 0      (Binary:  0.0% Ternary:  0.0% Other:  0.0%)
Conflicts : 0      (Average Length: 0.0)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=6.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 8.670
Prepare   : 3.950
Prepro.   : 4.640
Choices     : 56
Conflicts   : 20
Restarts    : 0
Atoms       : 1586622
Rules       : 1945493 (1: 1941215 2: 3510 3: 768)
Bodies      : 348219
Equivalences: 3231366 (Atom=Atom: 1572525 Body=Body: 34062 Other: 1624779)
Tight       : Yes
Variables   : 211993 (Eliminated:    0)
Constraints : 149833 (Binary: 79.0% Ternary:  1.6% Other: 19.4%)
Lemmas      : 20     (Binary: 10.0% Ternary: 25.0% Other: 65.0%)
Conflicts : 20     (Average Length: 3.5)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=7.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 10.520
Prepare   : 4.580
Prepro.   : 5.350
Choices     : 1017
Conflicts   : 638
Restarts    : 3
Atoms       : 1813747
Rules       : 2224608 (1: 2219724 2: 4014 3: 870)
Bodies      : 398709
Equivalences: 3693956 (Atom=Atom: 1797628 Body=Body: 38928 Other: 1857400)
Tight       : Yes
Variables   : 242947 (Eliminated:    0)
Constraints : 218980 (Binary: 79.2% Ternary:  1.3% Other: 19.5%)
Lemmas      : 638    (Binary:  3.0% Ternary:  4.9% Other: 92.2%)
Conflicts : 638    (Average Length: 114.9)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=8.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 12.990
Prepare   : 5.160
Prepro.   : 6.090
Choices     : 1940
Conflicts   : 1139
Restarts    : 4
Atoms       : 2040872
Rules       : 2503723 (1: 2498233 2: 4518 3: 972)
Bodies      : 449199
Equivalences: 4156546 (Atom=Atom: 2022731 Body=Body: 43794 Other: 2090021)
Tight       : Yes
Variables   : 273901 (Eliminated:    0)
Constraints : 295863 (Binary: 79.3% Ternary:  1.2% Other: 19.5%)
Lemmas      : 1139   (Binary:  4.3% Ternary:  6.2% Other: 89.5%)
Conflicts : 1139   (Average Length: 118.9)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=9.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 16.460
Prepare   : 5.730
Prepro.   : 6.840
Choices     : 7534
Conflicts   : 4375
Restarts    : 7
Atoms       : 2267997
Rules       : 2782838 (1: 2776742 2: 5022 3: 1074)
Bodies      : 499689
Equivalences: 4619136 (Atom=Atom: 2247834 Body=Body: 48660 Other: 2322642)
Tight       : Yes
Variables   : 304855 (Eliminated:    0)
Constraints : 378641 (Binary: 79.4% Ternary:  1.1% Other: 19.5%)
Lemmas      : 4375   (Binary:  3.9% Ternary:  4.2% Other: 91.9%)
Conflicts : 4375   (Average Length: 168.4)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=10.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
UNSATISFIABLE
Models      : 0
Time        : 24.110
Prepare   : 6.450
Prepro.   : 7.610
Choices     : 9869
Conflicts   : 6653
Restarts    : 8
Atoms       : 2495122
Rules       : 3061953 (1: 3055251 2: 5526 3: 1176)
Bodies      : 550179
Equivalences: 5081726 (Atom=Atom: 2472937 Body=Body: 53526 Other: 2555263)
Tight       : Yes
Variables   : 335809 (Eliminated:    0)
Constraints : 465770 (Binary: 79.5% Ternary:  1.0% Other: 19.5%)
Lemmas      : 6653   (Binary:  2.8% Ternary:  2.9% Other: 94.2%)
Conflicts : 6653   (Average Length: 250.8)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0
No solution.


% Running Query 0 with maxstep=11.
% Searching for 1 solution.
% warning: abAction/1 is never defined
% warning: attribute/1 is never defined
% warning: action_attribute/2 is never defined
% warning: inertial/1 is never defined
% warning: noconcurrency/0 is never defined
Solution: 1
         action(chooseSegment(blackcar(1),seg_ac)) action(chooseSegment(blackcar(1),seg_bc)) action(chooseSegment(blackcar(1),seg_cd)) action(chooseSegment(blackcar(2),seg_ac)) action(chooseSegment(blackcar(2),seg_bc)) action(chooseSegment(blackcar(2),seg_cd)) action(chooseSegment(blackcar(3),seg_ac)) action(chooseSegment(blackcar(3),seg_bc)) action(chooseSegment(blackcar(3),seg_cd)) action(chooseSegment(redcar(1),seg_ac)) action(chooseSegment(redcar(1),seg_bc)) action(chooseSegment(redcar(1),seg_cd)) action(chooseSegment(redcar(2),seg_ac)) action(chooseSegment(redcar(2),seg_bc)) action(chooseSegment(redcar(2),seg_cd)) action(chooseSegment(redcar(3),seg_ac)) action(chooseSegment(redcar(3),seg_bc)) action(chooseSegment(redcar(3),seg_cd)) car(blackcar(1)) car(blackcar(2)) car(blackcar(3)) car(redcar(1)) car(redcar(2)) car(redcar(3)) carNum(1) carNum(2) carNum(3) constant_sort(ahead(blackcar(1),blackcar(1)),boolean) constant_sort(ahead(blackcar(1),blackcar(2)),boolean) constant_sort(ahead(blackcar(1),blackcar(3)),boolean) constant_sort(ahead(blackcar(1),redcar(1)),boolean) constant_sort(ahead(blackcar(1),redcar(2)),boolean) constant_sort(ahead(blackcar(1),redcar(3)),boolean) constant_sort(ahead(blackcar(2),blackcar(1)),boolean) constant_sort(ahead(blackcar(2),blackcar(2)),boolean) constant_sort(ahead(blackcar(2),blackcar(3)),boolean) constant_sort(ahead(blackcar(2),redcar(1)),boolean) constant_sort(ahead(blackcar(2),redcar(2)),boolean) constant_sort(ahead(blackcar(2),redcar(3)),boolean) constant_sort(ahead(blackcar(3),blackcar(1)),boolean) constant_sort(ahead(blackcar(3),blackcar(2)),boolean) constant_sort(ahead(blackcar(3),blackcar(3)),boolean) constant_sort(ahead(blackcar(3),redcar(1)),boolean) constant_sort(ahead(blackcar(3),redcar(2)),boolean) constant_sort(ahead(blackcar(3),redcar(3)),boolean) constant_sort(ahead(redcar(1),blackcar(1)),boolean) constant_sort(ahead(redcar(1),blackcar(2)),boolean) constant_sort(ahead(redcar(1),blackcar(3)),boolean) constant_sort(ahead(redcar(1),redcar(1)),boolean) constant_sort(ahead(redcar(1),redcar(2)),boolean) constant_sort(ahead(redcar(1),redcar(3)),boolean) constant_sort(ahead(redcar(2),blackcar(1)),boolean) constant_sort(ahead(redcar(2),blackcar(2)),boolean) constant_sort(ahead(redcar(2),blackcar(3)),boolean) constant_sort(ahead(redcar(2),redcar(1)),boolean) constant_sort(ahead(redcar(2),redcar(2)),boolean) constant_sort(ahead(redcar(2),redcar(3)),boolean) constant_sort(ahead(redcar(3),blackcar(1)),boolean) constant_sort(ahead(redcar(3),blackcar(2)),boolean) constant_sort(ahead(redcar(3),blackcar(3)),boolean) constant_sort(ahead(redcar(3),redcar(1)),boolean) constant_sort(ahead(redcar(3),redcar(2)),boolean) constant_sort(ahead(redcar(3),redcar(3)),boolean) constant_sort(chooseSegment(blackcar(1),seg_ac),boolean) constant_sort(chooseSegment(blackcar(1),seg_bc),boolean) constant_sort(chooseSegment(blackcar(1),seg_cd),boolean) constant_sort(chooseSegment(blackcar(2),seg_ac),boolean) constant_sort(chooseSegment(blackcar(2),seg_bc),boolean) constant_sort(chooseSegment(blackcar(2),seg_cd),boolean) constant_sort(chooseSegment(blackcar(3),seg_ac),boolean) constant_sort(chooseSegment(blackcar(3),seg_bc),boolean) constant_sort(chooseSegment(blackcar(3),seg_cd),boolean) constant_sort(chooseSegment(redcar(1),seg_ac),boolean) constant_sort(chooseSegment(redcar(1),seg_bc),boolean) constant_sort(chooseSegment(redcar(1),seg_cd),boolean) constant_sort(chooseSegment(redcar(2),seg_ac),boolean) constant_sort(chooseSegment(redcar(2),seg_bc),boolean) constant_sort(chooseSegment(redcar(2),seg_cd),boolean) constant_sort(chooseSegment(redcar(3),seg_ac),boolean) constant_sort(chooseSegment(redcar(3),seg_bc),boolean) constant_sort(chooseSegment(redcar(3),seg_cd),boolean) constant_sort(distance(blackcar(1)),integer) constant_sort(distance(blackcar(2)),integer) constant_sort(distance(blackcar(3)),integer) constant_sort(distance(redcar(1)),integer) constant_sort(distance(redcar(2)),integer) constant_sort(distance(redcar(3)),integer) constant_sort(endNode(seg_ac),node) constant_sort(endNode(seg_bc),node) constant_sort(endNode(seg_cd),node) constant_sort(length(seg_ac),integer) constant_sort(length(seg_bc),integer) constant_sort(length(seg_cd),integer) constant_sort(maxDistance(blackcar(1)),integer) constant_sort(maxDistance(blackcar(2)),integer) constant_sort(maxDistance(blackcar(3)),integer) constant_sort(maxDistance(redcar(1)),integer) constant_sort(maxDistance(redcar(2)),integer) constant_sort(maxDistance(redcar(3)),integer) constant_sort(maxSpeed(blackcar(1)),integer) constant_sort(maxSpeed(blackcar(2)),integer) constant_sort(maxSpeed(blackcar(3)),integer) constant_sort(maxSpeed(redcar(1)),integer) constant_sort(maxSpeed(redcar(2)),integer) constant_sort(maxSpeed(redcar(3)),integer) constant_sort(modifiedDistance(blackcar(1)),integer) constant_sort(modifiedDistance(blackcar(2)),integer) constant_sort(modifiedDistance(blackcar(3)),integer) constant_sort(modifiedDistance(redcar(1)),integer) constant_sort(modifiedDistance(redcar(2)),integer) constant_sort(modifiedDistance(redcar(3)),integer) constant_sort(modifiedOrientation(blackcar(1)),boolean) constant_sort(modifiedOrientation(blackcar(2)),boolean) constant_sort(modifiedOrientation(blackcar(3)),boolean) constant_sort(modifiedOrientation(redcar(1)),boolean) constant_sort(modifiedOrientation(redcar(2)),boolean) constant_sort(modifiedOrientation(redcar(3)),boolean) constant_sort(modifiedSegment(blackcar(1)),segment) constant_sort(modifiedSegment(blackcar(2)),segment) constant_sort(modifiedSegment(blackcar(3)),segment) constant_sort(modifiedSegment(redcar(1)),segment) constant_sort(modifiedSegment(redcar(2)),segment) constant_sort(modifiedSegment(redcar(3)),segment) constant_sort(nextSegment(blackcar(1)),segment_star) constant_sort(nextSegment(blackcar(2)),segment_star) constant_sort(nextSegment(blackcar(3)),segment_star) constant_sort(nextSegment(redcar(1)),segment_star) constant_sort(nextSegment(redcar(2)),segment_star) constant_sort(nextSegment(redcar(3)),segment_star) constant_sort(node(blackcar(1)),node_star) constant_sort(node(blackcar(2)),node_star) constant_sort(node(blackcar(3)),node_star) constant_sort(node(redcar(1)),node_star) constant_sort(node(redcar(2)),node_star) constant_sort(node(redcar(3)),node_star) constant_sort(positiveOrientation(blackcar(1)),boolean) constant_sort(positiveOrientation(blackcar(2)),boolean) constant_sort(positiveOrientation(blackcar(3)),boolean) constant_sort(positiveOrientation(redcar(1)),boolean) constant_sort(positiveOrientation(redcar(2)),boolean) constant_sort(positiveOrientation(redcar(3)),boolean) constant_sort(segment(blackcar(1)),segment) constant_sort(segment(blackcar(2)),segment) constant_sort(segment(blackcar(3)),segment) constant_sort(segment(redcar(1)),segment) constant_sort(segment(redcar(2)),segment) constant_sort(segment(redcar(3)),segment) constant_sort(speed(blackcar(1)),integer) constant_sort(speed(blackcar(2)),integer) constant_sort(speed(blackcar(3)),integer) constant_sort(speed(redcar(1)),integer) constant_sort(speed(redcar(2)),integer) constant_sort(speed(redcar(3)),integer) constant_sort(speedLimit(seg_ac),integer) constant_sort(speedLimit(seg_bc),integer) constant_sort(speedLimit(seg_cd),integer) constant_sort(startNode(seg_ac),node) constant_sort(startNode(seg_bc),node) constant_sort(startNode(seg_cd),node) constant_sort(topSpeed(blackcar(1)),integer) constant_sort(topSpeed(blackcar(2)),integer) constant_sort(topSpeed(blackcar(3)),integer) constant_sort(topSpeed(redcar(1)),integer) constant_sort(topSpeed(redcar(2)),integer) constant_sort(topSpeed(redcar(3)),integer) constant_sort(varsigmaAhead(blackcar(1),blackcar(1)),boolean) constant_sort(varsigmaAhead(blackcar(1),blackcar(2)),boolean) constant_sort(varsigmaAhead(blackcar(1),blackcar(3)),boolean) constant_sort(varsigmaAhead(blackcar(1),redcar(1)),boolean) constant_sort(varsigmaAhead(blackcar(1),redcar(2)),boolean) constant_sort(varsigmaAhead(blackcar(1),redcar(3)),boolean) constant_sort(varsigmaAhead(blackcar(2),blackcar(1)),boolean) constant_sort(varsigmaAhead(blackcar(2),blackcar(2)),boolean) constant_sort(varsigmaAhead(blackcar(2),blackcar(3)),boolean) constant_sort(varsigmaAhead(blackcar(2),redcar(1)),boolean) constant_sort(varsigmaAhead(blackcar(2),redcar(2)),boolean) constant_sort(varsigmaAhead(blackcar(2),redcar(3)),boolean) constant_sort(varsigmaAhead(blackcar(3),blackcar(1)),boolean) constant_sort(varsigmaAhead(blackcar(3),blackcar(2)),boolean) constant_sort(varsigmaAhead(blackcar(3),blackcar(3)),boolean) constant_sort(varsigmaAhead(blackcar(3),redcar(1)),boolean) constant_sort(varsigmaAhead(blackcar(3),redcar(2)),boolean) constant_sort(varsigmaAhead(blackcar(3),redcar(3)),boolean) constant_sort(varsigmaAhead(redcar(1),blackcar(1)),boolean) constant_sort(varsigmaAhead(redcar(1),blackcar(2)),boolean) constant_sort(varsigmaAhead(redcar(1),blackcar(3)),boolean) constant_sort(varsigmaAhead(redcar(1),redcar(1)),boolean) constant_sort(varsigmaAhead(redcar(1),redcar(2)),boolean) constant_sort(varsigmaAhead(redcar(1),redcar(3)),boolean) constant_sort(varsigmaAhead(redcar(2),blackcar(1)),boolean) constant_sort(varsigmaAhead(redcar(2),blackcar(2)),boolean) constant_sort(varsigmaAhead(redcar(2),blackcar(3)),boolean) constant_sort(varsigmaAhead(redcar(2),redcar(1)),boolean) constant_sort(varsigmaAhead(redcar(2),redcar(2)),boolean) constant_sort(varsigmaAhead(redcar(2),redcar(3)),boolean) constant_sort(varsigmaAhead(redcar(3),blackcar(1)),boolean) constant_sort(varsigmaAhead(redcar(3),blackcar(2)),boolean) constant_sort(varsigmaAhead(redcar(3),blackcar(3)),boolean) constant_sort(varsigmaAhead(redcar(3),redcar(1)),boolean) constant_sort(varsigmaAhead(redcar(3),redcar(2)),boolean) constant_sort(varsigmaAhead(redcar(3),redcar(3)),boolean) constant_sort(willLeave(blackcar(1)),boolean) constant_sort(willLeave(blackcar(2)),boolean) constant_sort(willLeave(blackcar(3)),boolean) constant_sort(willLeave(redcar(1)),boolean) constant_sort(willLeave(redcar(2)),boolean) constant_sort(willLeave(redcar(3)),boolean) endNode(seg_ac)=c endNode(seg_bc)=c endNode(seg_cd)=d exogenous(willLeave(blackcar(1))) exogenous(willLeave(blackcar(2))) exogenous(willLeave(blackcar(3))) exogenous(willLeave(redcar(1))) exogenous(willLeave(redcar(2))) exogenous(willLeave(redcar(3))) exogenousAction(chooseSegment(blackcar(1),seg_ac)) exogenousAction(chooseSegment(blackcar(1),seg_bc)) exogenousAction(chooseSegment(blackcar(1),seg_cd)) exogenousAction(chooseSegment(blackcar(2),seg_ac)) exogenousAction(chooseSegment(blackcar(2),seg_bc)) exogenousAction(chooseSegment(blackcar(2),seg_cd)) exogenousAction(chooseSegment(blackcar(3),seg_ac)) exogenousAction(chooseSegment(blackcar(3),seg_bc)) exogenousAction(chooseSegment(blackcar(3),seg_cd)) exogenousAction(chooseSegment(redcar(1),seg_ac)) exogenousAction(chooseSegment(redcar(1),seg_bc)) exogenousAction(chooseSegment(redcar(1),seg_cd)) exogenousAction(chooseSegment(redcar(2),seg_ac)) exogenousAction(chooseSegment(redcar(2),seg_bc)) exogenousAction(chooseSegment(redcar(2),seg_cd)) exogenousAction(chooseSegment(redcar(3),seg_ac)) exogenousAction(chooseSegment(redcar(3),seg_bc)) exogenousAction(chooseSegment(redcar(3),seg_cd)) fluent(ahead(blackcar(1),blackcar(1))) fluent(ahead(blackcar(1),blackcar(2))) fluent(ahead(blackcar(1),blackcar(3))) fluent(ahead(blackcar(1),redcar(1))) fluent(ahead(blackcar(1),redcar(2))) fluent(ahead(blackcar(1),redcar(3))) fluent(ahead(blackcar(2),blackcar(1))) fluent(ahead(blackcar(2),blackcar(2))) fluent(ahead(blackcar(2),blackcar(3))) fluent(ahead(blackcar(2),redcar(1))) fluent(ahead(blackcar(2),redcar(2))) fluent(ahead(blackcar(2),redcar(3))) fluent(ahead(blackcar(3),blackcar(1))) fluent(ahead(blackcar(3),blackcar(2))) fluent(ahead(blackcar(3),blackcar(3))) fluent(ahead(blackcar(3),redcar(1))) fluent(ahead(blackcar(3),redcar(2))) fluent(ahead(blackcar(3),redcar(3))) fluent(ahead(redcar(1),blackcar(1))) fluent(ahead(redcar(1),blackcar(2))) fluent(ahead(redcar(1),blackcar(3))) fluent(ahead(redcar(1),redcar(1))) fluent(ahead(redcar(1),redcar(2))) fluent(ahead(redcar(1),redcar(3))) fluent(ahead(redcar(2),blackcar(1))) fluent(ahead(redcar(2),blackcar(2))) fluent(ahead(redcar(2),blackcar(3))) fluent(ahead(redcar(2),redcar(1))) fluent(ahead(redcar(2),redcar(2))) fluent(ahead(redcar(2),redcar(3))) fluent(ahead(redcar(3),blackcar(1))) fluent(ahead(redcar(3),blackcar(2))) fluent(ahead(redcar(3),blackcar(3))) fluent(ahead(redcar(3),redcar(1))) fluent(ahead(redcar(3),redcar(2))) fluent(ahead(redcar(3),redcar(3))) fluent(distance(blackcar(1))) fluent(distance(blackcar(2))) fluent(distance(blackcar(3))) fluent(distance(redcar(1))) fluent(distance(redcar(2))) fluent(distance(redcar(3))) fluent(maxDistance(blackcar(1))) fluent(maxDistance(blackcar(2))) fluent(maxDistance(blackcar(3))) fluent(maxDistance(redcar(1))) fluent(maxDistance(redcar(2))) fluent(maxDistance(redcar(3))) fluent(maxSpeed(blackcar(1))) fluent(maxSpeed(blackcar(2))) fluent(maxSpeed(blackcar(3))) fluent(maxSpeed(redcar(1))) fluent(maxSpeed(redcar(2))) fluent(maxSpeed(redcar(3))) fluent(modifiedDistance(blackcar(1))) fluent(modifiedDistance(blackcar(2))) fluent(modifiedDistance(blackcar(3))) fluent(modifiedDistance(redcar(1))) fluent(modifiedDistance(redcar(2))) fluent(modifiedDistance(redcar(3))) fluent(modifiedOrientation(blackcar(1))) fluent(modifiedOrientation(blackcar(2))) fluent(modifiedOrientation(blackcar(3))) fluent(modifiedOrientation(redcar(1))) fluent(modifiedOrientation(redcar(2))) fluent(modifiedOrientation(redcar(3))) fluent(modifiedSegment(blackcar(1))) fluent(modifiedSegment(blackcar(2))) fluent(modifiedSegment(blackcar(3))) fluent(modifiedSegment(redcar(1))) fluent(modifiedSegment(redcar(2))) fluent(modifiedSegment(redcar(3))) fluent(nextSegment(blackcar(1))) fluent(nextSegment(blackcar(2))) fluent(nextSegment(blackcar(3))) fluent(nextSegment(redcar(1))) fluent(nextSegment(redcar(2))) fluent(nextSegment(redcar(3))) fluent(node(blackcar(1))) fluent(node(blackcar(2))) fluent(node(blackcar(3))) fluent(node(redcar(1))) fluent(node(redcar(2))) fluent(node(redcar(3))) fluent(positiveOrientation(blackcar(1))) fluent(positiveOrientation(blackcar(2))) fluent(positiveOrientation(blackcar(3))) fluent(positiveOrientation(redcar(1))) fluent(positiveOrientation(redcar(2))) fluent(positiveOrientation(redcar(3))) fluent(segment(blackcar(1))) fluent(segment(blackcar(2))) fluent(segment(blackcar(3))) fluent(segment(redcar(1))) fluent(segment(redcar(2))) fluent(segment(redcar(3))) fluent(speed(blackcar(1))) fluent(speed(blackcar(2))) fluent(speed(blackcar(3))) fluent(speed(redcar(1))) fluent(speed(redcar(2))) fluent(speed(redcar(3))) fluent(varsigmaAhead(blackcar(1),blackcar(1))) fluent(varsigmaAhead(blackcar(1),blackcar(2))) fluent(varsigmaAhead(blackcar(1),blackcar(3))) fluent(varsigmaAhead(blackcar(1),redcar(1))) fluent(varsigmaAhead(blackcar(1),redcar(2))) fluent(varsigmaAhead(blackcar(1),redcar(3))) fluent(varsigmaAhead(blackcar(2),blackcar(1))) fluent(varsigmaAhead(blackcar(2),blackcar(2))) fluent(varsigmaAhead(blackcar(2),blackcar(3))) fluent(varsigmaAhead(blackcar(2),redcar(1))) fluent(varsigmaAhead(blackcar(2),redcar(2))) fluent(varsigmaAhead(blackcar(2),redcar(3))) fluent(varsigmaAhead(blackcar(3),blackcar(1))) fluent(varsigmaAhead(blackcar(3),blackcar(2))) fluent(varsigmaAhead(blackcar(3),blackcar(3))) fluent(varsigmaAhead(blackcar(3),redcar(1))) fluent(varsigmaAhead(blackcar(3),redcar(2))) fluent(varsigmaAhead(blackcar(3),redcar(3))) fluent(varsigmaAhead(redcar(1),blackcar(1))) fluent(varsigmaAhead(redcar(1),blackcar(2))) fluent(varsigmaAhead(redcar(1),blackcar(3))) fluent(varsigmaAhead(redcar(1),redcar(1))) fluent(varsigmaAhead(redcar(1),redcar(2))) fluent(varsigmaAhead(redcar(1),redcar(3))) fluent(varsigmaAhead(redcar(2),blackcar(1))) fluent(varsigmaAhead(redcar(2),blackcar(2))) fluent(varsigmaAhead(redcar(2),blackcar(3))) fluent(varsigmaAhead(redcar(2),redcar(1))) fluent(varsigmaAhead(redcar(2),redcar(2))) fluent(varsigmaAhead(redcar(2),redcar(3))) fluent(varsigmaAhead(redcar(3),blackcar(1))) fluent(varsigmaAhead(redcar(3),blackcar(2))) fluent(varsigmaAhead(redcar(3),blackcar(3))) fluent(varsigmaAhead(redcar(3),redcar(1))) fluent(varsigmaAhead(redcar(3),redcar(2))) fluent(varsigmaAhead(redcar(3),redcar(3))) fluent(willLeave(blackcar(1))) fluent(willLeave(blackcar(2))) fluent(willLeave(blackcar(3))) fluent(willLeave(redcar(1))) fluent(willLeave(redcar(2))) fluent(willLeave(redcar(3))) inertialFluent(nextSegment(blackcar(1))) inertialFluent(nextSegment(blackcar(2))) inertialFluent(nextSegment(blackcar(3))) inertialFluent(nextSegment(redcar(1))) inertialFluent(nextSegment(redcar(2))) inertialFluent(nextSegment(redcar(3))) inertialFluent(positiveOrientation(blackcar(1))) inertialFluent(positiveOrientation(blackcar(2))) inertialFluent(positiveOrientation(blackcar(3))) inertialFluent(positiveOrientation(redcar(1))) inertialFluent(positiveOrientation(redcar(2))) inertialFluent(positiveOrientation(redcar(3))) inertialFluent(segment(blackcar(1))) inertialFluent(segment(blackcar(2))) inertialFluent(segment(blackcar(3))) inertialFluent(segment(redcar(1))) inertialFluent(segment(redcar(2))) inertialFluent(segment(redcar(3))) integer(0) integer(1) integer(10) integer(11) integer(12) integer(2) integer(3) integer(4) integer(5) integer(6) integer(7) integer(8) integer(9) length(seg_ac)=6 length(seg_bc)=6 length(seg_cd)=12 node(a) node(b) node(c) node(d) node_star(a) node_star(b) node_star(c) node_star(d) node_star(none) query_label(0) rigid(endNode(seg_ac)) rigid(endNode(seg_bc)) rigid(endNode(seg_cd)) rigid(length(seg_ac)) rigid(length(seg_bc)) rigid(length(seg_cd)) rigid(speedLimit(seg_ac)) rigid(speedLimit(seg_bc)) rigid(speedLimit(seg_cd)) rigid(startNode(seg_ac)) rigid(startNode(seg_bc)) rigid(startNode(seg_cd)) rigid(topSpeed(blackcar(1))) rigid(topSpeed(blackcar(2))) rigid(topSpeed(blackcar(3))) rigid(topSpeed(redcar(1))) rigid(topSpeed(redcar(2))) rigid(topSpeed(redcar(3))) sdFluent(ahead(blackcar(1),blackcar(1))) sdFluent(ahead(blackcar(1),blackcar(2))) sdFluent(ahead(blackcar(1),blackcar(3))) sdFluent(ahead(blackcar(1),redcar(1))) sdFluent(ahead(blackcar(1),redcar(2))) sdFluent(ahead(blackcar(1),redcar(3))) sdFluent(ahead(blackcar(2),blackcar(1))) sdFluent(ahead(blackcar(2),blackcar(2))) sdFluent(ahead(blackcar(2),blackcar(3))) sdFluent(ahead(blackcar(2),redcar(1))) sdFluent(ahead(blackcar(2),redcar(2))) sdFluent(ahead(blackcar(2),redcar(3))) sdFluent(ahead(blackcar(3),blackcar(1))) sdFluent(ahead(blackcar(3),blackcar(2))) sdFluent(ahead(blackcar(3),blackcar(3))) sdFluent(ahead(blackcar(3),redcar(1))) sdFluent(ahead(blackcar(3),redcar(2))) sdFluent(ahead(blackcar(3),redcar(3))) sdFluent(ahead(redcar(1),blackcar(1))) sdFluent(ahead(redcar(1),blackcar(2))) sdFluent(ahead(redcar(1),blackcar(3))) sdFluent(ahead(redcar(1),redcar(1))) sdFluent(ahead(redcar(1),redcar(2))) sdFluent(ahead(redcar(1),redcar(3))) sdFluent(ahead(redcar(2),blackcar(1))) sdFluent(ahead(redcar(2),blackcar(2))) sdFluent(ahead(redcar(2),blackcar(3))) sdFluent(ahead(redcar(2),redcar(1))) sdFluent(ahead(redcar(2),redcar(2))) sdFluent(ahead(redcar(2),redcar(3))) sdFluent(ahead(redcar(3),blackcar(1))) sdFluent(ahead(redcar(3),blackcar(2))) sdFluent(ahead(redcar(3),blackcar(3))) sdFluent(ahead(redcar(3),redcar(1))) sdFluent(ahead(redcar(3),redcar(2))) sdFluent(ahead(redcar(3),redcar(3))) sdFluent(maxDistance(blackcar(1))) sdFluent(maxDistance(blackcar(2))) sdFluent(maxDistance(blackcar(3))) sdFluent(maxDistance(redcar(1))) sdFluent(maxDistance(redcar(2))) sdFluent(maxDistance(redcar(3))) sdFluent(maxSpeed(blackcar(1))) sdFluent(maxSpeed(blackcar(2))) sdFluent(maxSpeed(blackcar(3))) sdFluent(maxSpeed(redcar(1))) sdFluent(maxSpeed(redcar(2))) sdFluent(maxSpeed(redcar(3))) sdFluent(modifiedDistance(blackcar(1))) sdFluent(modifiedDistance(blackcar(2))) sdFluent(modifiedDistance(blackcar(3))) sdFluent(modifiedDistance(redcar(1))) sdFluent(modifiedDistance(redcar(2))) sdFluent(modifiedDistance(redcar(3))) sdFluent(modifiedOrientation(blackcar(1))) sdFluent(modifiedOrientation(blackcar(2))) sdFluent(modifiedOrientation(blackcar(3))) sdFluent(modifiedOrientation(redcar(1))) sdFluent(modifiedOrientation(redcar(2))) sdFluent(modifiedOrientation(redcar(3))) sdFluent(modifiedSegment(blackcar(1))) sdFluent(modifiedSegment(blackcar(2))) sdFluent(modifiedSegment(blackcar(3))) sdFluent(modifiedSegment(redcar(1))) sdFluent(modifiedSegment(redcar(2))) sdFluent(modifiedSegment(redcar(3))) sdFluent(node(blackcar(1))) sdFluent(node(blackcar(2))) sdFluent(node(blackcar(3))) sdFluent(node(redcar(1))) sdFluent(node(redcar(2))) sdFluent(node(redcar(3))) sdFluent(speed(blackcar(1))) sdFluent(speed(blackcar(2))) sdFluent(speed(blackcar(3))) sdFluent(speed(redcar(1))) sdFluent(speed(redcar(2))) sdFluent(speed(redcar(3))) sdFluent(varsigmaAhead(blackcar(1),blackcar(1))) sdFluent(varsigmaAhead(blackcar(1),blackcar(2))) sdFluent(varsigmaAhead(blackcar(1),blackcar(3))) sdFluent(varsigmaAhead(blackcar(1),redcar(1))) sdFluent(varsigmaAhead(blackcar(1),redcar(2))) sdFluent(varsigmaAhead(blackcar(1),redcar(3))) sdFluent(varsigmaAhead(blackcar(2),blackcar(1))) sdFluent(varsigmaAhead(blackcar(2),blackcar(2))) sdFluent(varsigmaAhead(blackcar(2),blackcar(3))) sdFluent(varsigmaAhead(blackcar(2),redcar(1))) sdFluent(varsigmaAhead(blackcar(2),redcar(2))) sdFluent(varsigmaAhead(blackcar(2),redcar(3))) sdFluent(varsigmaAhead(blackcar(3),blackcar(1))) sdFluent(varsigmaAhead(blackcar(3),blackcar(2))) sdFluent(varsigmaAhead(blackcar(3),blackcar(3))) sdFluent(varsigmaAhead(blackcar(3),redcar(1))) sdFluent(varsigmaAhead(blackcar(3),redcar(2))) sdFluent(varsigmaAhead(blackcar(3),redcar(3))) sdFluent(varsigmaAhead(redcar(1),blackcar(1))) sdFluent(varsigmaAhead(redcar(1),blackcar(2))) sdFluent(varsigmaAhead(redcar(1),blackcar(3))) sdFluent(varsigmaAhead(redcar(1),redcar(1))) sdFluent(varsigmaAhead(redcar(1),redcar(2))) sdFluent(varsigmaAhead(redcar(1),redcar(3))) sdFluent(varsigmaAhead(redcar(2),blackcar(1))) sdFluent(varsigmaAhead(redcar(2),blackcar(2))) sdFluent(varsigmaAhead(redcar(2),blackcar(3))) sdFluent(varsigmaAhead(redcar(2),redcar(1))) sdFluent(varsigmaAhead(redcar(2),redcar(2))) sdFluent(varsigmaAhead(redcar(2),redcar(3))) sdFluent(varsigmaAhead(redcar(3),blackcar(1))) sdFluent(varsigmaAhead(redcar(3),blackcar(2))) sdFluent(varsigmaAhead(redcar(3),blackcar(3))) sdFluent(varsigmaAhead(redcar(3),redcar(1))) sdFluent(varsigmaAhead(redcar(3),redcar(2))) sdFluent(varsigmaAhead(redcar(3),redcar(3))) segment(seg_ac) segment(seg_bc) segment(seg_cd) segment_star(none) segment_star(seg_ac) segment_star(seg_bc) segment_star(seg_cd) simpleFluent(distance(blackcar(1))) simpleFluent(distance(blackcar(2))) simpleFluent(distance(blackcar(3))) simpleFluent(distance(redcar(1))) simpleFluent(distance(redcar(2))) simpleFluent(distance(redcar(3))) simpleFluent(nextSegment(blackcar(1))) simpleFluent(nextSegment(blackcar(2))) simpleFluent(nextSegment(blackcar(3))) simpleFluent(nextSegment(redcar(1))) simpleFluent(nextSegment(redcar(2))) simpleFluent(nextSegment(redcar(3))) simpleFluent(positiveOrientation(blackcar(1))) simpleFluent(positiveOrientation(blackcar(2))) simpleFluent(positiveOrientation(blackcar(3))) simpleFluent(positiveOrientation(redcar(1))) simpleFluent(positiveOrientation(redcar(2))) simpleFluent(positiveOrientation(redcar(3))) simpleFluent(segment(blackcar(1))) simpleFluent(segment(blackcar(2))) simpleFluent(segment(blackcar(3))) simpleFluent(segment(redcar(1))) simpleFluent(segment(redcar(2))) simpleFluent(segment(redcar(3))) simpleFluent(willLeave(blackcar(1))) simpleFluent(willLeave(blackcar(2))) simpleFluent(willLeave(blackcar(3))) simpleFluent(willLeave(redcar(1))) simpleFluent(willLeave(redcar(2))) simpleFluent(willLeave(redcar(3))) sort(car) sort(carNum) sort(integer) sort(node) sort(node_star) sort(segment) sort(segment_star) speedLimit(seg_ac)=1 speedLimit(seg_bc)=1 speedLimit(seg_cd)=1 startNode(seg_ac)=a startNode(seg_bc)=b startNode(seg_cd)=c topSpeed(blackcar(1))=1 topSpeed(blackcar(2))=1 topSpeed(blackcar(3))=1 topSpeed(redcar(1))=2 topSpeed(redcar(2))=2 topSpeed(redcar(3))=2

        0:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=2 distance(redcar(2))=4 distance(redcar(3))=6 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=3 maxDistance(redcar(2))=5 maxDistance(redcar(3))=1 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=0 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(3))=seg_cd node(blackcar(3))=c node(redcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_ac speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=0 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),redcar(2)) willLeave(redcar(3))

        1:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(3)) chooseSegment(redcar(2),seg_cd) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=3 distance(redcar(2))=5 distance(redcar(3))=1 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=4 maxDistance(redcar(2))=6 maxDistance(redcar(3))=2 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=1 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_ac modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd node(blackcar(3))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=0 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3))

        2:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=2 distance(blackcar(2))=4 distance(blackcar(3))=6 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=2 maxDistance(blackcar(1))=3 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=1 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=3 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=2 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=0 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=2 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(3))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_bc segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3)) varsigmaAhead(redcar(3),redcar(2)) willLeave(blackcar(3))

        3:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) chooseSegment(blackcar(2),seg_cd) distance(blackcar(1))=3 distance(blackcar(2))=5 distance(blackcar(3))=1 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=3 maxDistance(blackcar(1))=4 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=2 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=4 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=3 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=1 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=3 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_bc modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(2))=seg_cd node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=0 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3))

        4:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=2 distance(redcar(1))=4 distance(redcar(2))=6 distance(redcar(3))=4 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=3 maxDistance(redcar(1))=5 maxDistance(redcar(2))=1 maxDistance(redcar(3))=5 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=2 modifiedDistance(redcar(1))=4 modifiedDistance(redcar(2))=0 modifiedDistance(redcar(3))=4 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(2))=seg_cd node(blackcar(2))=c node(redcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_ac segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),blackcar(2)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(redcar(2))

        5:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(2)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(2)) chooseSegment(redcar(1),seg_cd) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=3 distance(redcar(1))=5 distance(redcar(2))=1 distance(redcar(3))=5 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=4 maxDistance(redcar(1))=6 maxDistance(redcar(2))=2 maxDistance(redcar(3))=6 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=3 modifiedDistance(redcar(1))=5 modifiedDistance(redcar(2))=1 modifiedDistance(redcar(3))=5 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_ac modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd node(blackcar(2))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=0 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))

        6:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=4 distance(blackcar(2))=6 distance(blackcar(3))=4 distance(redcar(1))=6 distance(redcar(2))=2 distance(redcar(3))=6 maxDistance(blackcar(1))=5 maxDistance(blackcar(2))=1 maxDistance(blackcar(3))=5 maxDistance(redcar(1))=1 maxDistance(redcar(2))=3 maxDistance(redcar(3))=7 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=4 modifiedDistance(blackcar(2))=0 modifiedDistance(blackcar(3))=4 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=2 modifiedDistance(redcar(3))=6 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(2))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(2))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_bc segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(2),redcar(1)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(blackcar(2))

        7:  ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) chooseSegment(blackcar(1),seg_cd) distance(blackcar(1))=5 distance(blackcar(2))=1 distance(blackcar(3))=5 distance(redcar(1))=6 distance(redcar(2))=3 distance(redcar(3))=7 maxDistance(blackcar(1))=6 maxDistance(blackcar(2))=2 maxDistance(blackcar(3))=6 maxDistance(redcar(1))=1 maxDistance(redcar(2))=4 maxDistance(redcar(3))=8 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=5 modifiedDistance(blackcar(2))=1 modifiedDistance(blackcar(3))=5 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=3 modifiedDistance(redcar(3))=7 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_bc modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(redcar(1))=seg_cd node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=0 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))

        8:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=2 distance(blackcar(3))=6 distance(redcar(1))=6 distance(redcar(2))=4 distance(redcar(3))=8 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=3 maxDistance(blackcar(3))=7 maxDistance(redcar(1))=1 maxDistance(redcar(2))=5 maxDistance(redcar(3))=9 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=2 modifiedDistance(blackcar(3))=6 modifiedDistance(redcar(1))=0 modifiedDistance(redcar(2))=4 modifiedDistance(redcar(3))=8 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd nextSegment(redcar(1))=seg_cd node(blackcar(1))=c node(redcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_ac segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),blackcar(1)) varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(redcar(1))

        9:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(1),blackcar(1)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=3 distance(blackcar(3))=7 distance(redcar(1))=1 distance(redcar(2))=5 distance(redcar(3))=9 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=4 maxDistance(blackcar(3))=8 maxDistance(redcar(1))=2 maxDistance(redcar(2))=6 maxDistance(redcar(3))=10 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=3 modifiedDistance(blackcar(3))=7 modifiedDistance(redcar(1))=1 modifiedDistance(redcar(2))=5 modifiedDistance(redcar(3))=9 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=0 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(1),blackcar(1)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))

        10:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(1),blackcar(1)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=6 distance(blackcar(2))=4 distance(blackcar(3))=8 distance(redcar(1))=2 distance(redcar(2))=6 distance(redcar(3))=10 maxDistance(blackcar(1))=1 maxDistance(blackcar(2))=5 maxDistance(blackcar(3))=9 maxDistance(redcar(1))=3 maxDistance(redcar(2))=7 maxDistance(redcar(3))=11 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=0 modifiedDistance(blackcar(2))=4 modifiedDistance(blackcar(3))=8 modifiedDistance(redcar(1))=2 modifiedDistance(redcar(2))=6 modifiedDistance(redcar(3))=10 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd nextSegment(blackcar(1))=seg_cd node(blackcar(1))=c positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_bc segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(1),blackcar(1)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3)) willLeave(blackcar(1))

        11:  ahead(blackcar(2),blackcar(1)) ahead(blackcar(2),redcar(1)) ahead(blackcar(3),blackcar(1)) ahead(blackcar(3),blackcar(2)) ahead(blackcar(3),redcar(1)) ahead(blackcar(3),redcar(2)) ahead(redcar(1),blackcar(1)) ahead(redcar(2),blackcar(1)) ahead(redcar(2),blackcar(2)) ahead(redcar(2),redcar(1)) ahead(redcar(3),blackcar(1)) ahead(redcar(3),blackcar(2)) ahead(redcar(3),blackcar(3)) ahead(redcar(3),redcar(1)) ahead(redcar(3),redcar(2)) distance(blackcar(1))=1 distance(blackcar(2))=5 distance(blackcar(3))=9 distance(redcar(1))=3 distance(redcar(2))=7 distance(redcar(3))=11 maxDistance(blackcar(1))=2 maxDistance(blackcar(2))=6 maxDistance(blackcar(3))=10 maxDistance(redcar(1))=4 maxDistance(redcar(2))=8 maxDistance(redcar(3))=12 maxSpeed(blackcar(1))=1 maxSpeed(blackcar(2))=1 maxSpeed(blackcar(3))=1 maxSpeed(redcar(1))=1 maxSpeed(redcar(2))=1 maxSpeed(redcar(3))=1 modifiedDistance(blackcar(1))=1 modifiedDistance(blackcar(2))=5 modifiedDistance(blackcar(3))=9 modifiedDistance(redcar(1))=3 modifiedDistance(redcar(2))=7 modifiedDistance(redcar(3))=11 modifiedOrientation(blackcar(1)) modifiedOrientation(blackcar(2)) modifiedOrientation(blackcar(3)) modifiedOrientation(redcar(1)) modifiedOrientation(redcar(2)) modifiedOrientation(redcar(3)) modifiedSegment(blackcar(1))=seg_cd modifiedSegment(blackcar(2))=seg_cd modifiedSegment(blackcar(3))=seg_cd modifiedSegment(redcar(1))=seg_cd modifiedSegment(redcar(2))=seg_cd modifiedSegment(redcar(3))=seg_cd positiveOrientation(blackcar(1)) positiveOrientation(blackcar(2)) positiveOrientation(blackcar(3)) positiveOrientation(redcar(1)) positiveOrientation(redcar(2)) positiveOrientation(redcar(3)) segment(blackcar(1))=seg_cd segment(blackcar(2))=seg_cd segment(blackcar(3))=seg_cd segment(redcar(1))=seg_cd segment(redcar(2))=seg_cd segment(redcar(3))=seg_cd speed(blackcar(1))=1 speed(blackcar(2))=1 speed(blackcar(3))=1 speed(redcar(1))=1 speed(redcar(2))=1 speed(redcar(3))=1 varsigmaAhead(blackcar(2),redcar(1)) varsigmaAhead(blackcar(3),redcar(2)) varsigmaAhead(redcar(1),blackcar(1)) varsigmaAhead(redcar(2),blackcar(2)) varsigmaAhead(redcar(3),blackcar(3))

SATISFIABLE
Models      : 1+
Time        : 25.290
Prepare   : 7.190
Prepro.   : 8.500
Choices     : 15597
Conflicts   : 8761
Restarts    : 9
Atoms       : 2722247
Rules       : 3341068 (1: 3333760 2: 6030 3: 1278)
Bodies      : 600669
Equivalences: 5544316 (Atom=Atom: 2698040 Body=Body: 58392 Other: 2787884)
Tight       : Yes
Variables   : 366763 (Eliminated:    0)
Constraints : 555071 (Binary: 79.5% Ternary:  0.9% Other: 19.5%)
Lemmas      : 8761   (Binary:  3.3% Ternary:  3.5% Other: 93.2%)
Conflicts : 8761   (Average Length: 413.2)
Loops     : 0      (Average Length: 0.0)
Other     : 0      (Average Length: 0.0)
Deleted   : 0


# ----------------------------------------------------------------------------------------------------------------------
# CCALC 
# ----------------------------------------------------------------------------------------------------------------------

?- time(loadf 'traffic-altmerge-benchmark.cp').
% loading file /usr/local/lib/ccalc/macros.std
% loading file /home/jbabb1/workspace/cplus2asp/tests/benchmarks/traffic-altmerge-benchmark.cp
% in transition mode...
% 1338 atoms, 114078 rules, 604980 clauses (86994 new atoms)
% Grounding time: 134.46 seconds
% Completion time: 39.13 seconds
% Total time: 173.59 seconds
% 1,691,847,743 inferences, 173.600 CPU in 174.124 seconds (100% CPU, 9745667 Lips)
true.

?- time(query 0).
% Shifting atoms and clauses... done. (0.00 seconds)
% After shifting: 44010 atoms (including new atoms), 298284 clauses
% Writing input clauses... done.  (0.98 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 1 seconds (prep 1 seconds, search 0 seconds)

No solution with maxstep 0.

% Shifting atoms and clauses... done. (0.00 seconds)
% After shifting: 88332 atoms (including new atoms), 604980 clauses
% Writing input clauses... done.  (1.96 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 1 seconds (prep 1 seconds, search 0 seconds)

No solution with maxstep 1.

% Shifting atoms and clauses... done. (0.00 seconds)
% After shifting: 132654 atoms (including new atoms), 911676 clauses
% Writing input clauses... done.  (3.75 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 3 seconds (prep 3 seconds, search 0 seconds)

No solution with maxstep 2.

% Shifting atoms and clauses... done. (0.01 seconds)
% After shifting: 176976 atoms (including new atoms), 1218372 clauses
% Writing input clauses... done.  (5.50 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 4 seconds (prep 4 seconds, search 0 seconds)

No solution with maxstep 3.

% Shifting atoms and clauses... done. (0.00 seconds)
% After shifting: 221298 atoms (including new atoms), 1525068 clauses
% Writing input clauses... done.  (7.30 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 5 seconds (prep 5 seconds, search 0 seconds)

No solution with maxstep 4.

% Shifting atoms and clauses... done. (0.00 seconds)
% After shifting: 265620 atoms (including new atoms), 1831764 clauses
% Writing input clauses... done.  (9.01 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 7 seconds (prep 7 seconds, search 0 seconds)

No solution with maxstep 5.

% Shifting atoms and clauses... done. (0.00 seconds)
% After shifting: 309942 atoms (including new atoms), 2138460 clauses
% Writing input clauses... done.  (10.83 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 8 seconds (prep 8 seconds, search 0 seconds)

No solution with maxstep 6.

% Shifting atoms and clauses... done. (0.01 seconds)
% After shifting: 354264 atoms (including new atoms), 2445156 clauses
% Writing input clauses... done.  (12.56 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 16 seconds (prep 16 seconds, search 0 seconds)

No solution with maxstep 7.

% Shifting atoms and clauses... done. (0.01 seconds)
% After shifting: 398586 atoms (including new atoms), 2751852 clauses
% Writing input clauses... done.  (14.40 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 19 seconds (prep 19 seconds, search 0 seconds)

No solution with maxstep 8.

% Shifting atoms and clauses... done. (0.01 seconds)
% After shifting: 442908 atoms (including new atoms), 3058548 clauses
% Writing input clauses... done.  (16.09 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 24 seconds (prep 24 seconds, search 0 seconds)

No solution with maxstep 9.

% Shifting atoms and clauses... done. (0.01 seconds)
% After shifting: 487230 atoms (including new atoms), 3365244 clauses
% Writing input clauses... done.  (17.90 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 33 seconds (prep 33 seconds, search 0 seconds)

No solution with maxstep 10.

% Shifting atoms and clauses... done. (0.01 seconds)
% After shifting: 531552 atoms (including new atoms), 3671940 clauses
% Writing input clauses... done.  (19.66 seconds)
% Calling relsat 2.0... done.
% Reading output file(s) from SAT solver... done.
% Solution time: 585 seconds (prep 584 seconds, search 1 seconds)

length(seg_ac)=6  length(seg_bc)=6  length(seg_cd)=12  speedLimit(seg_ac)=1  speedLimit(seg_bc)=1  speedLimit(seg_cd)=1  topSpeed(blackcar(1))=1  topSpeed(blackcar(2))=1  topSpeed(blackcar(3))=1  topSpeed(redcar(1))=2  topSpeed(redcar(2))=2  topSpeed(redcar(3))=2  startNode(seg_ac)=a  startNode(seg_bc)=b  startNode(seg_cd)=c  endNode(seg_ac)=c  endNode(seg_bc)=c  endNode(seg_cd)=d

0:  willLeave(blackcar(3))  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=2  distance(blackcar(2))=4  distance(blackcar(3))=6  distance(redcar(1))=2  distance(redcar(2))=4  distance(redcar(3))=6  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_bc  segment(blackcar(3))=seg_bc  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_ac  nextSegment(blackcar(3))=seg_cd  nextSegment(redcar(3))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(redcar(2), redcar(1))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), blackcar(1))  varsigmaAhead(blackcar(3), blackcar(2))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), redcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=0  speed(redcar(2))=0  speed(redcar(3))=0  modifiedDistance(blackcar(1))=2  modifiedDistance(blackcar(2))=4  modifiedDistance(blackcar(3))=0  modifiedDistance(redcar(1))=2  modifiedDistance(redcar(2))=4  modifiedDistance(redcar(3))=0  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=3  maxDistance(blackcar(2))=5  maxDistance(blackcar(3))=1  maxDistance(redcar(1))=3  maxDistance(redcar(2))=5  maxDistance(redcar(3))=1  node(blackcar(3))=c  node(redcar(3))=c  modifiedSegment(blackcar(1))=seg_bc  modifiedSegment(blackcar(2))=seg_bc  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_ac  modifiedSegment(redcar(3))=seg_cd

1:  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=3  distance(blackcar(2))=5  distance(blackcar(3))=1  distance(redcar(1))=2  distance(redcar(2))=4  distance(redcar(3))=6  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_bc  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_ac  nextSegment(redcar(3))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), redcar(1))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), blackcar(1))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), redcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=0  speed(redcar(2))=0  speed(redcar(3))=0  modifiedDistance(blackcar(1))=3  modifiedDistance(blackcar(2))=5  modifiedDistance(blackcar(3))=1  modifiedDistance(redcar(1))=2  modifiedDistance(redcar(2))=4  modifiedDistance(redcar(3))=0  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=4  maxDistance(blackcar(2))=6  maxDistance(blackcar(3))=2  maxDistance(redcar(1))=3  maxDistance(redcar(2))=5  maxDistance(redcar(3))=1  node(redcar(3))=c  modifiedSegment(blackcar(1))=seg_bc  modifiedSegment(blackcar(2))=seg_bc  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_ac  modifiedSegment(redcar(3))=seg_cd

ACTIONS:  chooseSegment(blackcar(2), seg_cd)

2:  willLeave(redcar(3))  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=4  distance(blackcar(2))=6  distance(blackcar(3))=2  distance(redcar(1))=2  distance(redcar(2))=4  distance(redcar(3))=6  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_bc  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_ac  nextSegment(blackcar(2))=seg_cd  nextSegment(redcar(3))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), redcar(1))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), blackcar(1))  varsigmaAhead(blackcar(3), blackcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), redcar(2))  speed(blackcar(1))=0  speed(blackcar(2))=0  speed(blackcar(3))=1  speed(redcar(1))=1  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=4  modifiedDistance(blackcar(2))=0  modifiedDistance(blackcar(3))=2  modifiedDistance(redcar(1))=2  modifiedDistance(redcar(2))=4  modifiedDistance(redcar(3))=0  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=5  maxDistance(blackcar(2))=1  maxDistance(blackcar(3))=3  maxDistance(redcar(1))=3  maxDistance(redcar(2))=5  maxDistance(redcar(3))=1  node(blackcar(2))=c  node(redcar(3))=c  modifiedSegment(blackcar(1))=seg_bc  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_ac  modifiedSegment(redcar(3))=seg_cd

3:  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=4  distance(blackcar(2))=6  distance(blackcar(3))=3  distance(redcar(1))=3  distance(redcar(2))=5  distance(redcar(3))=1  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_bc  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_cd  nextSegment(blackcar(2))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(2))  varsigmaAhead(blackcar(2), blackcar(1))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=0  speed(blackcar(2))=0  speed(blackcar(3))=1  speed(redcar(1))=1  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=4  modifiedDistance(blackcar(2))=0  modifiedDistance(blackcar(3))=3  modifiedDistance(redcar(1))=3  modifiedDistance(redcar(2))=5  modifiedDistance(redcar(3))=1  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=5  maxDistance(blackcar(2))=1  maxDistance(blackcar(3))=4  maxDistance(redcar(1))=4  maxDistance(redcar(2))=6  maxDistance(redcar(3))=2  node(blackcar(2))=c  modifiedSegment(blackcar(1))=seg_bc  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_ac  modifiedSegment(redcar(3))=seg_cd

ACTIONS:  chooseSegment(redcar(2), seg_cd)

4:  willLeave(blackcar(2))  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=4  distance(blackcar(2))=6  distance(blackcar(3))=4  distance(redcar(1))=4  distance(redcar(2))=6  distance(redcar(3))=2  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_bc  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_cd  nextSegment(blackcar(2))=seg_cd  nextSegment(redcar(2))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), blackcar(1))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), blackcar(2))  varsigmaAhead(redcar(3), redcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=0  speed(redcar(2))=0  speed(redcar(3))=1  modifiedDistance(blackcar(1))=4  modifiedDistance(blackcar(2))=0  modifiedDistance(blackcar(3))=4  modifiedDistance(redcar(1))=4  modifiedDistance(redcar(2))=0  modifiedDistance(redcar(3))=2  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=5  maxDistance(blackcar(2))=1  maxDistance(blackcar(3))=5  maxDistance(redcar(1))=5  maxDistance(redcar(2))=1  maxDistance(redcar(3))=3  node(blackcar(2))=c  node(redcar(2))=c  modifiedSegment(blackcar(1))=seg_bc  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

5:  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=5  distance(blackcar(2))=1  distance(blackcar(3))=5  distance(redcar(1))=4  distance(redcar(2))=6  distance(redcar(3))=3  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_cd  nextSegment(redcar(2))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=0  speed(redcar(2))=0  speed(redcar(3))=1  modifiedDistance(blackcar(1))=5  modifiedDistance(blackcar(2))=1  modifiedDistance(blackcar(3))=5  modifiedDistance(redcar(1))=4  modifiedDistance(redcar(2))=0  modifiedDistance(redcar(3))=3  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=6  maxDistance(blackcar(2))=2  maxDistance(blackcar(3))=6  maxDistance(redcar(1))=5  maxDistance(redcar(2))=1  maxDistance(redcar(3))=4  node(redcar(2))=c  modifiedSegment(blackcar(1))=seg_bc  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

ACTIONS:  chooseSegment(blackcar(1), seg_cd)

6:  willLeave(redcar(2))  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=6  distance(blackcar(2))=2  distance(blackcar(3))=6  distance(redcar(1))=4  distance(redcar(2))=6  distance(redcar(3))=4  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_ac  segment(redcar(3))=seg_cd  nextSegment(blackcar(1))=seg_cd  nextSegment(redcar(2))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), blackcar(1))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=0  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=1  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=0  modifiedDistance(blackcar(2))=2  modifiedDistance(blackcar(3))=6  modifiedDistance(redcar(1))=4  modifiedDistance(redcar(2))=0  modifiedDistance(redcar(3))=4  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=1  maxDistance(blackcar(2))=3  maxDistance(blackcar(3))=7  maxDistance(redcar(1))=5  maxDistance(redcar(2))=1  maxDistance(redcar(3))=5  node(blackcar(1))=c  node(redcar(2))=c  modifiedSegment(blackcar(1))=seg_cd  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

7:  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=6  distance(blackcar(2))=3  distance(blackcar(3))=7  distance(redcar(1))=5  distance(redcar(2))=1  distance(redcar(3))=5  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_cd  segment(redcar(3))=seg_cd  nextSegment(blackcar(1))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), blackcar(1))  ahead(redcar(3), blackcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), blackcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=0  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=1  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=0  modifiedDistance(blackcar(2))=3  modifiedDistance(blackcar(3))=7  modifiedDistance(redcar(1))=5  modifiedDistance(redcar(2))=1  modifiedDistance(redcar(3))=5  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=1  maxDistance(blackcar(2))=4  maxDistance(blackcar(3))=8  maxDistance(redcar(1))=6  maxDistance(redcar(2))=2  maxDistance(redcar(3))=6  node(blackcar(1))=c  modifiedSegment(blackcar(1))=seg_cd  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_ac  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

ACTIONS:  chooseSegment(redcar(1), seg_cd)

8:  willLeave(blackcar(1))  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=6  distance(blackcar(2))=4  distance(blackcar(3))=8  distance(redcar(1))=6  distance(redcar(2))=2  distance(redcar(3))=6  segment(blackcar(1))=seg_bc  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_cd  segment(redcar(3))=seg_cd  nextSegment(blackcar(1))=seg_cd  nextSegment(redcar(1))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(2), redcar(1))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(1))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), blackcar(1))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), blackcar(1))  varsigmaAhead(redcar(2), redcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=0  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=0  modifiedDistance(blackcar(2))=4  modifiedDistance(blackcar(3))=8  modifiedDistance(redcar(1))=0  modifiedDistance(redcar(2))=2  modifiedDistance(redcar(3))=6  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=1  maxDistance(blackcar(2))=5  maxDistance(blackcar(3))=9  maxDistance(redcar(1))=1  maxDistance(redcar(2))=3  maxDistance(redcar(3))=7  node(blackcar(1))=c  node(redcar(1))=c  modifiedSegment(blackcar(1))=seg_cd  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_cd  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

9:  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=1  distance(blackcar(2))=5  distance(blackcar(3))=9  distance(redcar(1))=6  distance(redcar(2))=3  distance(redcar(3))=7  segment(blackcar(1))=seg_cd  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_cd  segment(redcar(3))=seg_cd  nextSegment(redcar(1))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(1), redcar(1))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(2), redcar(1))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(1))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), blackcar(1))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(1), redcar(1))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), blackcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=0  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=1  modifiedDistance(blackcar(2))=5  modifiedDistance(blackcar(3))=9  modifiedDistance(redcar(1))=0  modifiedDistance(redcar(2))=3  modifiedDistance(redcar(3))=7  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=2  maxDistance(blackcar(2))=6  maxDistance(blackcar(3))=10  maxDistance(redcar(1))=1  maxDistance(redcar(2))=4  maxDistance(redcar(3))=8  node(redcar(1))=c  modifiedSegment(blackcar(1))=seg_cd  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_cd  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

10:  willLeave(redcar(1))  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=2  distance(blackcar(2))=6  distance(blackcar(3))=10  distance(redcar(1))=6  distance(redcar(2))=4  distance(redcar(3))=8  segment(blackcar(1))=seg_cd  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_ac  segment(redcar(2))=seg_cd  segment(redcar(3))=seg_cd  nextSegment(redcar(1))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(1), redcar(1))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(2), redcar(1))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(1))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), blackcar(1))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(1), redcar(1))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), blackcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=1  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=2  modifiedDistance(blackcar(2))=6  modifiedDistance(blackcar(3))=10  modifiedDistance(redcar(1))=0  modifiedDistance(redcar(2))=4  modifiedDistance(redcar(3))=8  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=3  maxDistance(blackcar(2))=7  maxDistance(blackcar(3))=11  maxDistance(redcar(1))=1  maxDistance(redcar(2))=5  maxDistance(redcar(3))=9  node(redcar(1))=c  modifiedSegment(blackcar(1))=seg_cd  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_cd  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd

11:  positiveOrientation(blackcar(1))  positiveOrientation(blackcar(2))  positiveOrientation(blackcar(3))  positiveOrientation(redcar(1))  positiveOrientation(redcar(2))  positiveOrientation(redcar(3))  distance(blackcar(1))=3  distance(blackcar(2))=7  distance(blackcar(3))=11  distance(redcar(1))=1  distance(redcar(2))=5  distance(redcar(3))=9  segment(blackcar(1))=seg_cd  segment(blackcar(2))=seg_cd  segment(blackcar(3))=seg_cd  segment(redcar(1))=seg_cd  segment(redcar(2))=seg_cd  segment(redcar(3))=seg_cd  modifiedOrientation(blackcar(1))  modifiedOrientation(blackcar(2))  modifiedOrientation(blackcar(3))  modifiedOrientation(redcar(1))  modifiedOrientation(redcar(2))  modifiedOrientation(redcar(3))  ahead(blackcar(1), redcar(1))  ahead(blackcar(2), blackcar(1))  ahead(blackcar(2), redcar(1))  ahead(blackcar(2), redcar(2))  ahead(blackcar(3), blackcar(1))  ahead(blackcar(3), blackcar(2))  ahead(blackcar(3), redcar(1))  ahead(blackcar(3), redcar(2))  ahead(blackcar(3), redcar(3))  ahead(redcar(2), blackcar(1))  ahead(redcar(2), redcar(1))  ahead(redcar(3), blackcar(1))  ahead(redcar(3), blackcar(2))  ahead(redcar(3), redcar(1))  ahead(redcar(3), redcar(2))  varsigmaAhead(blackcar(1), redcar(1))  varsigmaAhead(blackcar(2), redcar(2))  varsigmaAhead(blackcar(3), redcar(3))  varsigmaAhead(redcar(2), blackcar(1))  varsigmaAhead(redcar(3), blackcar(2))  speed(blackcar(1))=1  speed(blackcar(2))=1  speed(blackcar(3))=1  speed(redcar(1))=1  speed(redcar(2))=1  speed(redcar(3))=1  modifiedDistance(blackcar(1))=3  modifiedDistance(blackcar(2))=7  modifiedDistance(blackcar(3))=11  modifiedDistance(redcar(1))=1  modifiedDistance(redcar(2))=5  modifiedDistance(redcar(3))=9  maxSpeed(blackcar(1))=1  maxSpeed(blackcar(2))=1  maxSpeed(blackcar(3))=1  maxSpeed(redcar(1))=1  maxSpeed(redcar(2))=1  maxSpeed(redcar(3))=1  maxDistance(blackcar(1))=4  maxDistance(blackcar(2))=8  maxDistance(blackcar(3))=12  maxDistance(redcar(1))=2  maxDistance(redcar(2))=6  maxDistance(redcar(3))=10  modifiedSegment(blackcar(1))=seg_cd  modifiedSegment(blackcar(2))=seg_cd  modifiedSegment(blackcar(3))=seg_cd  modifiedSegment(redcar(1))=seg_cd  modifiedSegment(redcar(2))=seg_cd  modifiedSegment(redcar(3))=seg_cd


% 699,020,065 inferences, 537.310 CPU in 1281.508 seconds (42% CPU, 1300962 Lips)
true.



