:- sorts
  index;
  article;
  position.

:- objects
  1..5                     :: index;
  article(index)           :: article;
  1..10                    :: position.

:- variables
  N                        :: index;
  X,Y                      :: article;
  L                        :: position.

:- constants 
  loc(article)             :: simpleFluent(position);
  onBelt(article)          :: inertialFluent;
  remove(article),
  return(article)          :: exogenousAction.


remove(X) causes -onBelt(X).
nonexecutable remove(X) if -onBelt(X).

return(X) causes onBelt(X).
nonexecutable return(X) if onBelt(X).

%never loc(X)=loc(Y) where X\=Y.
constraint loc(X)\=loc(Y) where X\=Y.

caused loc(X)=L if loc(X)=L & -onBelt(X) after loc(X)=L.
caused loc(X)=(L mod 10)+1 if loc(X)=(L mod 10)+1 & onBelt(X) after loc(X)=L.


:- nmquery 
label :: 0;
maxstep :: 4;
anyFluentValues;
cwaActions;
constraint
  0: loc(article(N))=N*2;
constraint 
  0: [/\X | onBelt(X)];
1: remove(article(1)),
   remove(article(2));
2: remove(article(3)),
   return(article(1));
3: return(article(2)).

:- query 
label :: 1;
maxstep :: 2;
0: remove(article(1)).

/*
| ?- loadf 'conveyor'.
% loading file /stage/projects3/tag/ccalc/macros.std
% loading file /stage/projects3/tag/ccalc/examples/conveyor
% in transition mode...
% 120 atoms, 610 rules, 1340 clauses (100 new atoms)
% Grounding time: 1.71 seconds
% Completion time: 0.43 seconds
yes
| ?- nmquery 0.
% Shifted theory: 715 atoms (incl. auxiliary atoms), 4070 clauses, 2.16 seconds
% Calling mChaff... 
% Solution time: 0.06 seconds (prep 0.05 seconds, search 0.01 seconds)  

0:  onBelt(article(1))  onBelt(article(2))  onBelt(article(3))  onBelt(article(4))  onBelt(article(5))  loc(article(1))=2  loc(article(2))=4  loc(article(3))=6  loc(article(4))=8  loc(article(5))=10 

1:  onBelt(article(1))  onBelt(article(2))  onBelt(article(3))  onBelt(article(4))  onBelt(article(5))  loc(article(1))=3  loc(article(2))=5  loc(article(3))=7  loc(article(4))=9  loc(article(5))=1 

ACTIONS:  remove(article(1))  remove(article(2))  

2:  onBelt(article(3))  onBelt(article(4))  onBelt(article(5))  loc(article(1))=3  loc(article(2))=5  loc(article(3))=8  loc(article(4))=10  loc(article(5))=2 

ACTIONS:  remove(article(3))  return(article(1))  

3:  onBelt(article(1))  onBelt(article(4))  onBelt(article(5))  loc(article(1))=4  loc(article(2))=5  loc(article(3))=8  loc(article(4))=1  loc(article(5))=3 

ACTIONS:  return(article(2))  

4:  onBelt(article(1))  onBelt(article(2))  onBelt(article(4))  onBelt(article(5))  loc(article(1))=5  loc(article(2))=6  loc(article(3))=8  loc(article(4))=2  loc(article(5))=4 
yes
| ?- 
*/

